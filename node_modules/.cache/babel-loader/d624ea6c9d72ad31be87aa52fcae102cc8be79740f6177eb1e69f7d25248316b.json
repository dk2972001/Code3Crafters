{"ast":null,"code":"\"use client\";\n\nimport _defineProperty from \"C:/Users/DineshkumarMurugados/Downloads/Code3Crafters-main/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"C:/Users/DineshkumarMurugados/Downloads/Code3Crafters-main/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport SkeletonAvatar from './Avatar';\nimport SkeletonButton from './Button';\nimport Element from './Element';\nimport SkeletonImage from './Image';\nimport SkeletonInput from './Input';\nimport SkeletonNode from './Node';\nimport Paragraph from './Paragraph';\nimport Title from './Title';\nimport useStyle from './style';\nfunction getComponentProps(prop) {\n  if (prop && typeof prop === 'object') {\n    return prop;\n  }\n  return {};\n}\nfunction getAvatarBasicProps(hasTitle, hasParagraph) {\n  if (hasTitle && !hasParagraph) {\n    // Square avatar\n    return {\n      size: 'large',\n      shape: 'square'\n    };\n  }\n  return {\n    size: 'large',\n    shape: 'circle'\n  };\n}\nfunction getTitleBasicProps(hasAvatar, hasParagraph) {\n  if (!hasAvatar && hasParagraph) {\n    return {\n      width: '38%'\n    };\n  }\n  if (hasAvatar && hasParagraph) {\n    return {\n      width: '50%'\n    };\n  }\n  return {};\n}\nfunction getParagraphBasicProps(hasAvatar, hasTitle) {\n  var basicProps = {};\n  // Width\n  if (!hasAvatar || !hasTitle) {\n    basicProps.width = '61%';\n  }\n  // Rows\n  if (!hasAvatar && hasTitle) {\n    basicProps.rows = 3;\n  } else {\n    basicProps.rows = 2;\n  }\n  return basicProps;\n}\nvar Skeleton = function Skeleton(props) {\n  var customizePrefixCls = props.prefixCls,\n    loading = props.loading,\n    className = props.className,\n    rootClassName = props.rootClassName,\n    style = props.style,\n    children = props.children,\n    _props$avatar = props.avatar,\n    avatar = _props$avatar === void 0 ? false : _props$avatar,\n    _props$title = props.title,\n    title = _props$title === void 0 ? true : _props$title,\n    _props$paragraph = props.paragraph,\n    paragraph = _props$paragraph === void 0 ? true : _props$paragraph,\n    active = props.active,\n    round = props.round;\n  var _React$useContext = React.useContext(ConfigContext),\n    getPrefixCls = _React$useContext.getPrefixCls,\n    direction = _React$useContext.direction,\n    skeleton = _React$useContext.skeleton;\n  var prefixCls = getPrefixCls('skeleton', customizePrefixCls);\n  var _useStyle = useStyle(prefixCls),\n    _useStyle2 = _slicedToArray(_useStyle, 3),\n    wrapCSSVar = _useStyle2[0],\n    hashId = _useStyle2[1],\n    cssVarCls = _useStyle2[2];\n  if (loading || !('loading' in props)) {\n    var _classNames;\n    var hasAvatar = !!avatar;\n    var hasTitle = !!title;\n    var hasParagraph = !!paragraph;\n    // Avatar\n    var avatarNode;\n    if (hasAvatar) {\n      var avatarProps = Object.assign(Object.assign({\n        prefixCls: \"\".concat(prefixCls, \"-avatar\")\n      }, getAvatarBasicProps(hasTitle, hasParagraph)), getComponentProps(avatar));\n      // We direct use SkeletonElement as avatar in skeleton internal.\n      avatarNode = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-header\")\n      }, /*#__PURE__*/React.createElement(Element, Object.assign({}, avatarProps)));\n    }\n    var contentNode;\n    if (hasTitle || hasParagraph) {\n      // Title\n      var $title;\n      if (hasTitle) {\n        var titleProps = Object.assign(Object.assign({\n          prefixCls: \"\".concat(prefixCls, \"-title\")\n        }, getTitleBasicProps(hasAvatar, hasParagraph)), getComponentProps(title));\n        $title = /*#__PURE__*/React.createElement(Title, Object.assign({}, titleProps));\n      }\n      // Paragraph\n      var paragraphNode;\n      if (hasParagraph) {\n        var paragraphProps = Object.assign(Object.assign({\n          prefixCls: \"\".concat(prefixCls, \"-paragraph\")\n        }, getParagraphBasicProps(hasAvatar, hasTitle)), getComponentProps(paragraph));\n        paragraphNode = /*#__PURE__*/React.createElement(Paragraph, Object.assign({}, paragraphProps));\n      }\n      contentNode = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-content\")\n      }, $title, paragraphNode);\n    }\n    var cls = classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-with-avatar\"), hasAvatar), _defineProperty(_classNames, \"\".concat(prefixCls, \"-active\"), active), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-round\"), round), _classNames), skeleton === null || skeleton === void 0 ? void 0 : skeleton.className, className, rootClassName, hashId, cssVarCls);\n    return wrapCSSVar( /*#__PURE__*/React.createElement(\"div\", {\n      className: cls,\n      style: Object.assign(Object.assign({}, skeleton === null || skeleton === void 0 ? void 0 : skeleton.style), style)\n    }, avatarNode, contentNode));\n  }\n  return typeof children !== 'undefined' ? children : null;\n};\nSkeleton.Button = SkeletonButton;\nSkeleton.Avatar = SkeletonAvatar;\nSkeleton.Input = SkeletonInput;\nSkeleton.Image = SkeletonImage;\nSkeleton.Node = SkeletonNode;\nif (process.env.NODE_ENV !== 'production') {\n  Skeleton.displayName = 'Skeleton';\n}\nexport default Skeleton;","map":{"version":3,"names":["_defineProperty","_slicedToArray","classNames","React","ConfigContext","SkeletonAvatar","SkeletonButton","Element","SkeletonImage","SkeletonInput","SkeletonNode","Paragraph","Title","useStyle","getComponentProps","prop","getAvatarBasicProps","hasTitle","hasParagraph","size","shape","getTitleBasicProps","hasAvatar","width","getParagraphBasicProps","basicProps","rows","Skeleton","props","customizePrefixCls","prefixCls","loading","className","rootClassName","style","children","_props$avatar","avatar","_props$title","title","_props$paragraph","paragraph","active","round","_React$useContext","useContext","getPrefixCls","direction","skeleton","_useStyle","_useStyle2","wrapCSSVar","hashId","cssVarCls","_classNames","avatarNode","avatarProps","Object","assign","concat","createElement","contentNode","$title","titleProps","paragraphNode","paragraphProps","cls","Button","Avatar","Input","Image","Node","process","env","NODE_ENV","displayName"],"sources":["C:/Users/DineshkumarMurugados/Downloads/Code3Crafters-main/node_modules/antd/es/skeleton/Skeleton.js"],"sourcesContent":["\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport SkeletonAvatar from './Avatar';\nimport SkeletonButton from './Button';\nimport Element from './Element';\nimport SkeletonImage from './Image';\nimport SkeletonInput from './Input';\nimport SkeletonNode from './Node';\nimport Paragraph from './Paragraph';\nimport Title from './Title';\nimport useStyle from './style';\nfunction getComponentProps(prop) {\n  if (prop && typeof prop === 'object') {\n    return prop;\n  }\n  return {};\n}\nfunction getAvatarBasicProps(hasTitle, hasParagraph) {\n  if (hasTitle && !hasParagraph) {\n    // Square avatar\n    return {\n      size: 'large',\n      shape: 'square'\n    };\n  }\n  return {\n    size: 'large',\n    shape: 'circle'\n  };\n}\nfunction getTitleBasicProps(hasAvatar, hasParagraph) {\n  if (!hasAvatar && hasParagraph) {\n    return {\n      width: '38%'\n    };\n  }\n  if (hasAvatar && hasParagraph) {\n    return {\n      width: '50%'\n    };\n  }\n  return {};\n}\nfunction getParagraphBasicProps(hasAvatar, hasTitle) {\n  const basicProps = {};\n  // Width\n  if (!hasAvatar || !hasTitle) {\n    basicProps.width = '61%';\n  }\n  // Rows\n  if (!hasAvatar && hasTitle) {\n    basicProps.rows = 3;\n  } else {\n    basicProps.rows = 2;\n  }\n  return basicProps;\n}\nconst Skeleton = props => {\n  const {\n    prefixCls: customizePrefixCls,\n    loading,\n    className,\n    rootClassName,\n    style,\n    children,\n    avatar = false,\n    title = true,\n    paragraph = true,\n    active,\n    round\n  } = props;\n  const {\n    getPrefixCls,\n    direction,\n    skeleton\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('skeleton', customizePrefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls);\n  if (loading || !('loading' in props)) {\n    const hasAvatar = !!avatar;\n    const hasTitle = !!title;\n    const hasParagraph = !!paragraph;\n    // Avatar\n    let avatarNode;\n    if (hasAvatar) {\n      const avatarProps = Object.assign(Object.assign({\n        prefixCls: `${prefixCls}-avatar`\n      }, getAvatarBasicProps(hasTitle, hasParagraph)), getComponentProps(avatar));\n      // We direct use SkeletonElement as avatar in skeleton internal.\n      avatarNode = /*#__PURE__*/React.createElement(\"div\", {\n        className: `${prefixCls}-header`\n      }, /*#__PURE__*/React.createElement(Element, Object.assign({}, avatarProps)));\n    }\n    let contentNode;\n    if (hasTitle || hasParagraph) {\n      // Title\n      let $title;\n      if (hasTitle) {\n        const titleProps = Object.assign(Object.assign({\n          prefixCls: `${prefixCls}-title`\n        }, getTitleBasicProps(hasAvatar, hasParagraph)), getComponentProps(title));\n        $title = /*#__PURE__*/React.createElement(Title, Object.assign({}, titleProps));\n      }\n      // Paragraph\n      let paragraphNode;\n      if (hasParagraph) {\n        const paragraphProps = Object.assign(Object.assign({\n          prefixCls: `${prefixCls}-paragraph`\n        }, getParagraphBasicProps(hasAvatar, hasTitle)), getComponentProps(paragraph));\n        paragraphNode = /*#__PURE__*/React.createElement(Paragraph, Object.assign({}, paragraphProps));\n      }\n      contentNode = /*#__PURE__*/React.createElement(\"div\", {\n        className: `${prefixCls}-content`\n      }, $title, paragraphNode);\n    }\n    const cls = classNames(prefixCls, {\n      [`${prefixCls}-with-avatar`]: hasAvatar,\n      [`${prefixCls}-active`]: active,\n      [`${prefixCls}-rtl`]: direction === 'rtl',\n      [`${prefixCls}-round`]: round\n    }, skeleton === null || skeleton === void 0 ? void 0 : skeleton.className, className, rootClassName, hashId, cssVarCls);\n    return wrapCSSVar( /*#__PURE__*/React.createElement(\"div\", {\n      className: cls,\n      style: Object.assign(Object.assign({}, skeleton === null || skeleton === void 0 ? void 0 : skeleton.style), style)\n    }, avatarNode, contentNode));\n  }\n  return typeof children !== 'undefined' ? children : null;\n};\nSkeleton.Button = SkeletonButton;\nSkeleton.Avatar = SkeletonAvatar;\nSkeleton.Input = SkeletonInput;\nSkeleton.Image = SkeletonImage;\nSkeleton.Node = SkeletonNode;\nif (process.env.NODE_ENV !== 'production') {\n  Skeleton.displayName = 'Skeleton';\n}\nexport default Skeleton;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}