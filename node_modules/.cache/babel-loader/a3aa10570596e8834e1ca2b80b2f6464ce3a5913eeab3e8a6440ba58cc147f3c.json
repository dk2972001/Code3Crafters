{"ast":null,"code":"\"use client\";\n\nimport _defineProperty from \"C:/Users/DineshkumarMurugados/Downloads/Code3Crafters-main/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport * as React from 'react';\nimport CheckOutlined from \"@ant-design/icons/es/icons/CheckOutlined\";\nimport CopyOutlined from \"@ant-design/icons/es/icons/CopyOutlined\";\nimport classNames from 'classnames';\nimport TransButton from '../../_util/transButton';\nimport Tooltip from '../../tooltip';\nimport { getNode, toList } from './util';\nexport default function CopyBtn(props) {\n  var _classNames;\n  var prefixCls = props.prefixCls,\n    copied = props.copied,\n    _props$locale = props.locale,\n    locale = _props$locale === void 0 ? {} : _props$locale,\n    onCopy = props.onCopy,\n    iconOnly = props.iconOnly,\n    tooltips = props.tooltips,\n    icon = props.icon;\n  var tooltipNodes = toList(tooltips);\n  var iconNodes = toList(icon);\n  var copiedText = locale.copied,\n    copyText = locale.copy;\n  var copyTitle = copied ? getNode(tooltipNodes[1], copiedText) : getNode(tooltipNodes[0], copyText);\n  var systemStr = copied ? copiedText : copyText;\n  var ariaLabel = typeof copyTitle === 'string' ? copyTitle : systemStr;\n  return /*#__PURE__*/React.createElement(Tooltip, {\n    key: \"copy\",\n    title: copyTitle\n  }, /*#__PURE__*/React.createElement(TransButton, {\n    className: classNames(\"\".concat(prefixCls, \"-copy\"), (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-copy-success\"), copied), _defineProperty(_classNames, \"\".concat(prefixCls, \"-copy-icon-only\"), iconOnly), _classNames)),\n    onClick: onCopy,\n    \"aria-label\": ariaLabel\n  }, copied ? getNode(iconNodes[1], /*#__PURE__*/React.createElement(CheckOutlined, null), true) : getNode(iconNodes[0], /*#__PURE__*/React.createElement(CopyOutlined, null), true)));\n}","map":{"version":3,"names":["_defineProperty","React","CheckOutlined","CopyOutlined","classNames","TransButton","Tooltip","getNode","toList","CopyBtn","props","_classNames","prefixCls","copied","_props$locale","locale","onCopy","iconOnly","tooltips","icon","tooltipNodes","iconNodes","copiedText","copyText","copy","copyTitle","systemStr","ariaLabel","createElement","key","title","className","concat","onClick"],"sources":["C:/Users/DineshkumarMurugados/Downloads/Code3Crafters-main/node_modules/antd/es/typography/Base/CopyBtn.js"],"sourcesContent":["\"use client\";\n\nimport * as React from 'react';\nimport CheckOutlined from \"@ant-design/icons/es/icons/CheckOutlined\";\nimport CopyOutlined from \"@ant-design/icons/es/icons/CopyOutlined\";\nimport classNames from 'classnames';\nimport TransButton from '../../_util/transButton';\nimport Tooltip from '../../tooltip';\nimport { getNode, toList } from './util';\nexport default function CopyBtn(props) {\n  const {\n    prefixCls,\n    copied,\n    locale = {},\n    onCopy,\n    iconOnly,\n    tooltips,\n    icon\n  } = props;\n  const tooltipNodes = toList(tooltips);\n  const iconNodes = toList(icon);\n  const {\n    copied: copiedText,\n    copy: copyText\n  } = locale;\n  const copyTitle = copied ? getNode(tooltipNodes[1], copiedText) : getNode(tooltipNodes[0], copyText);\n  const systemStr = copied ? copiedText : copyText;\n  const ariaLabel = typeof copyTitle === 'string' ? copyTitle : systemStr;\n  return /*#__PURE__*/React.createElement(Tooltip, {\n    key: \"copy\",\n    title: copyTitle\n  }, /*#__PURE__*/React.createElement(TransButton, {\n    className: classNames(`${prefixCls}-copy`, {\n      [`${prefixCls}-copy-success`]: copied,\n      [`${prefixCls}-copy-icon-only`]: iconOnly\n    }),\n    onClick: onCopy,\n    \"aria-label\": ariaLabel\n  }, copied ? getNode(iconNodes[1], /*#__PURE__*/React.createElement(CheckOutlined, null), true) : getNode(iconNodes[0], /*#__PURE__*/React.createElement(CopyOutlined, null), true)));\n}"],"mappings":"AAAA,YAAY;;AAAC,OAAAA,eAAA;AAEb,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,OAAOC,aAAa,MAAM,0CAA0C;AACpE,OAAOC,YAAY,MAAM,yCAAyC;AAClE,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAOC,WAAW,MAAM,yBAAyB;AACjD,OAAOC,OAAO,MAAM,eAAe;AACnC,SAASC,OAAO,EAAEC,MAAM,QAAQ,QAAQ;AACxC,eAAe,SAASC,OAAOA,CAACC,KAAK,EAAE;EAAA,IAAAC,WAAA;EACrC,IACEC,SAAS,GAOPF,KAAK,CAPPE,SAAS;IACTC,MAAM,GAMJH,KAAK,CANPG,MAAM;IAAAC,aAAA,GAMJJ,KAAK,CALPK,MAAM;IAANA,MAAM,GAAAD,aAAA,cAAG,CAAC,CAAC,GAAAA,aAAA;IACXE,MAAM,GAIJN,KAAK,CAJPM,MAAM;IACNC,QAAQ,GAGNP,KAAK,CAHPO,QAAQ;IACRC,QAAQ,GAENR,KAAK,CAFPQ,QAAQ;IACRC,IAAI,GACFT,KAAK,CADPS,IAAI;EAEN,IAAMC,YAAY,GAAGZ,MAAM,CAACU,QAAQ,CAAC;EACrC,IAAMG,SAAS,GAAGb,MAAM,CAACW,IAAI,CAAC;EAC9B,IACUG,UAAU,GAEhBP,MAAM,CAFRF,MAAM;IACAU,QAAQ,GACZR,MAAM,CADRS,IAAI;EAEN,IAAMC,SAAS,GAAGZ,MAAM,GAAGN,OAAO,CAACa,YAAY,CAAC,CAAC,CAAC,EAAEE,UAAU,CAAC,GAAGf,OAAO,CAACa,YAAY,CAAC,CAAC,CAAC,EAAEG,QAAQ,CAAC;EACpG,IAAMG,SAAS,GAAGb,MAAM,GAAGS,UAAU,GAAGC,QAAQ;EAChD,IAAMI,SAAS,GAAG,OAAOF,SAAS,KAAK,QAAQ,GAAGA,SAAS,GAAGC,SAAS;EACvE,OAAO,aAAazB,KAAK,CAAC2B,aAAa,CAACtB,OAAO,EAAE;IAC/CuB,GAAG,EAAE,MAAM;IACXC,KAAK,EAAEL;EACT,CAAC,EAAE,aAAaxB,KAAK,CAAC2B,aAAa,CAACvB,WAAW,EAAE;IAC/C0B,SAAS,EAAE3B,UAAU,IAAA4B,MAAA,CAAIpB,SAAS,aAAAD,WAAA,OAAAX,eAAA,CAAAW,WAAA,KAAAqB,MAAA,CAC5BpB,SAAS,oBAAkBC,MAAM,GAAAb,eAAA,CAAAW,WAAA,KAAAqB,MAAA,CACjCpB,SAAS,sBAAoBK,QAAQ,GAAAN,WAAA,CAC1C,CAAC;IACFsB,OAAO,EAAEjB,MAAM;IACf,YAAY,EAAEW;EAChB,CAAC,EAAEd,MAAM,GAAGN,OAAO,CAACc,SAAS,CAAC,CAAC,CAAC,EAAE,aAAapB,KAAK,CAAC2B,aAAa,CAAC1B,aAAa,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,GAAGK,OAAO,CAACc,SAAS,CAAC,CAAC,CAAC,EAAE,aAAapB,KAAK,CAAC2B,aAAa,CAACzB,YAAY,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;AACtL"},"metadata":{},"sourceType":"module","externalDependencies":[]}