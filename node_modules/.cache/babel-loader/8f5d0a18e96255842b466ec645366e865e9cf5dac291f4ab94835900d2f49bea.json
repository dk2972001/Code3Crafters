{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DineshkumarMurugados\\\\Downloads\\\\Code3Crafters-main\\\\src\\\\components\\\\home\\\\ContactForm\\\\ContactForm.jsx\",\n  _s = $RefreshSig$();\n// contactform.jsx\nimport { Button, Form, Input, message } from \"antd\";\nimport React, { useState } from \"react\";\nimport emailjs from \"@emailjs/browser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmailForm = () => {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [messageText, setMessage] = useState(\"\");\n  const [successMessageVisible, setSuccessMessageVisible] = useState(false);\n  const onFinish = async values => {\n    // Your EmailJS service ID, template ID, and Public Key\n    const serviceId = \"service_o9airgw\";\n    const templateId = \"template_y517hvw\";\n    const publicKey = \"vMLFO9hxLRqh92bFz\";\n\n    // Create a new object that contains dynamic template params\n    const templateParams = {\n      from_name: values.name,\n      from_email: values.email,\n      from_phone: values.phone,\n      to_name: \"Web Wizard\",\n      message: values.message\n    };\n    try {\n      // Send the email using EmailJS\n      await emailjs.send(serviceId, templateId, templateParams, publicKey);\n      setSuccessMessageVisible(true);\n    } catch (error) {\n      console.error(\"Error sending email:\", error);\n      message.error(\"Failed to send email. Please try again later.\");\n    }\n  };\n  const onFinishFailed = errorInfo => {\n    console.log(\"Failed:\", errorInfo);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex flex-column align-items-center\",\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      className: \"w-50\",\n      name: \"basic\",\n      labelCol: {\n        span: 8\n      },\n      wrapperCol: {\n        span: 16\n      },\n      style: {\n        maxWidth: 600\n      },\n      initialValues: {\n        remember: true\n      },\n      onFinish: onFinish,\n      onFinishFailed: onFinishFailed,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Name\",\n        name: \"name\",\n        rules: [{\n          required: true,\n          message: \"Please type your name!\"\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"email\",\n        label: \"Email\",\n        rules: [{\n          type: \"email\",\n          required: true,\n          message: \"Please enter a valid email!\"\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"phone\",\n        label: \"Phone Number\",\n        rules: [{\n          required: true,\n          message: \"Please type your number!\"\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          type: \"number\",\n          value: phone,\n          onChange: e => setPhone(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"message\",\n        label: \"Message\",\n        rules: [{\n          required: true,\n          message: \"Please enter your message!\"\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input.TextArea, {\n          value: messageText,\n          onChange: e => setMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        wrapperCol: {\n          offset: 8,\n          span: 16\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), successMessageVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      children: \"Email sent successfully!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(EmailForm, \"anbfoV+L6aXbIXQ3AuVAT2yuDhw=\");\n_c = EmailForm;\nexport default EmailForm;\nvar _c;\n$RefreshReg$(_c, \"EmailForm\");","map":{"version":3,"names":["Button","Form","Input","message","React","useState","emailjs","jsxDEV","_jsxDEV","EmailForm","_s","name","setName","email","setEmail","phone","setPhone","messageText","setMessage","successMessageVisible","setSuccessMessageVisible","onFinish","values","serviceId","templateId","publicKey","templateParams","from_name","from_email","from_phone","to_name","send","error","console","onFinishFailed","errorInfo","log","className","children","labelCol","span","wrapperCol","style","maxWidth","initialValues","remember","autoComplete","Item","label","rules","required","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","type","TextArea","offset","htmlType","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/DineshkumarMurugados/Downloads/Code3Crafters-main/src/components/home/ContactForm/ContactForm.jsx"],"sourcesContent":["// contactform.jsx\nimport { Button, Form, Input, message } from \"antd\";\nimport React, { useState } from \"react\";\nimport emailjs from \"@emailjs/browser\";\n\nconst EmailForm = () => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [messageText, setMessage] = useState(\"\");\n  const [successMessageVisible, setSuccessMessageVisible] = useState(false);\n\n  const onFinish = async (values) => {\n    // Your EmailJS service ID, template ID, and Public Key\n    const serviceId = \"service_o9airgw\";\n    const templateId = \"template_y517hvw\";\n    const publicKey = \"vMLFO9hxLRqh92bFz\";\n\n    // Create a new object that contains dynamic template params\n    const templateParams = {\n      from_name: values.name,\n      from_email: values.email,\n      from_phone: values.phone,\n      to_name: \"Web Wizard\",\n      message: values.message,\n    };\n\n    try {\n      // Send the email using EmailJS\n      await emailjs.send(serviceId, templateId, templateParams, publicKey);\n      setSuccessMessageVisible(true);\n    } catch (error) {\n      console.error(\"Error sending email:\", error);\n      message.error(\"Failed to send email. Please try again later.\");\n    }\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  return (\n    <div className=\"d-flex flex-column align-items-center\">\n      <Form\n        className=\"w-50\"\n        name=\"basic\"\n        labelCol={{\n          span: 8,\n        }}\n        wrapperCol={{\n          span: 16,\n        }}\n        style={{\n          maxWidth: 600,\n        }}\n        initialValues={{\n          remember: true,\n        }}\n        onFinish={onFinish}\n        onFinishFailed={onFinishFailed}\n        autoComplete=\"off\"\n      >\n        <Form.Item\n          label=\"Name\"\n          name=\"name\"\n          rules={[\n            {\n              required: true,\n              message: \"Please type your name!\",\n            },\n          ]}\n        >\n          <Input value={name} onChange={(e) => setName(e.target.value)} />\n        </Form.Item>\n        <Form.Item\n          name=\"email\"\n          label=\"Email\"\n          rules={[\n            {\n              type: \"email\",\n              required: true,\n              message: \"Please enter a valid email!\",\n            },\n          ]}\n        >\n          <Input value={email} onChange={(e) => setEmail(e.target.value)} />\n        </Form.Item>\n        <Form.Item\n          name=\"phone\"\n          label=\"Phone Number\"\n          rules={[\n            {\n              required: true,\n              message: \"Please type your number!\",\n            },\n          ]}\n        >\n          <Input\n            type=\"number\"\n            value={phone}\n            onChange={(e) => setPhone(e.target.value)}\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"message\"\n          label=\"Message\"\n          rules={[\n            {\n              required: true,\n              message: \"Please enter your message!\",\n            },\n          ]}\n        >\n          <Input.TextArea\n            value={messageText}\n            onChange={(e) => setMessage(e.target.value)}\n          />\n        </Form.Item>\n        <Form.Item\n          wrapperCol={{\n            offset: 8,\n            span: 16,\n          }}\n        >\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n      {successMessageVisible && (\n        <div style={{ marginTop: \"20px\" }}>Email sent successfully!</div>\n      )}\n    </div>\n  );\n};\n\nexport default EmailForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}