{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DineshkumarMurugados\\\\Downloads\\\\Code3Crafters-main\\\\src\\\\components\\\\home\\\\ContactForm\\\\ContactForm.jsx\",\n  _s = $RefreshSig$();\n// contactform.jsx\nimport { Button, Form, Input, message } from \"antd\";\nimport React, { useState } from \"react\";\nimport emailjs from \"@emailjs/browser\";\nimport { Helmet } from \"react-helmet-async\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EmailForm = () => {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [messageText, setMessage] = useState(\"\");\n  const [successMessageVisible, setSuccessMessageVisible] = useState(false);\n  const onFinish = async values => {\n    // Your EmailJS service ID, template ID, and Public Key\n    const serviceId = \"service_o9airgw\";\n    const templateId = \"template_y517hvw\";\n    const publicKey = \"vMLFO9hxLRqh92bFz\";\n\n    // Create a new object that contains dynamic template params\n    const templateParams = {\n      from_name: values.name,\n      from_email: values.email,\n      from_phone: values.phone,\n      to_name: \"Web Wizard\",\n      message: values.message\n    };\n    try {\n      // Send the email using EmailJS\n      await emailjs.send(serviceId, templateId, templateParams, publicKey);\n      setSuccessMessageVisible(true);\n    } catch (error) {\n      console.error(\"Error sending email:\", error);\n      message.error(\"Failed to send email. Please try again later.\");\n    }\n  };\n  const onFinishFailed = errorInfo => {\n    console.log(\"Failed:\", errorInfo);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Code3Crafters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex flex-column align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        className: \"w-50\",\n        name: \"basic\",\n        labelCol: {\n          span: 8\n        },\n        wrapperCol: {\n          span: 16\n        },\n        style: {\n          maxWidth: 600\n        },\n        initialValues: {\n          remember: true\n        },\n        onFinish: onFinish,\n        onFinishFailed: onFinishFailed,\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Name\",\n          name: \"name\",\n          rules: [{\n            required: true,\n            message: \"Please type your name!\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"email\",\n          label: \"Email\",\n          rules: [{\n            type: \"email\",\n            required: true,\n            message: \"Please enter a valid email!\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"phone\",\n          label: \"Phone Number\",\n          rules: [{\n            required: true,\n            message: \"Please type your number!\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            value: phone,\n            onChange: e => setPhone(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"message\",\n          label: \"Message\",\n          rules: [{\n            required: true,\n            message: \"Please enter your message!\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input.TextArea, {\n            value: messageText,\n            onChange: e => setMessage(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          wrapperCol: {\n            offset: 8,\n            span: 16\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), successMessageVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"20px\"\n        },\n        children: \"Email sent successfully!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this), \"// Remove unnecessary closing tags // \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(EmailForm, \"anbfoV+L6aXbIXQ3AuVAT2yuDhw=\");\n_c = EmailForm;\nexport default EmailForm;\nvar _c;\n$RefreshReg$(_c, \"EmailForm\");","map":{"version":3,"names":["Button","Form","Input","message","React","useState","emailjs","Helmet","jsxDEV","_jsxDEV","Fragment","_Fragment","EmailForm","_s","name","setName","email","setEmail","phone","setPhone","messageText","setMessage","successMessageVisible","setSuccessMessageVisible","onFinish","values","serviceId","templateId","publicKey","templateParams","from_name","from_email","from_phone","to_name","send","error","console","onFinishFailed","errorInfo","log","children","fileName","_jsxFileName","lineNumber","columnNumber","content","className","labelCol","span","wrapperCol","style","maxWidth","initialValues","remember","autoComplete","Item","label","rules","required","value","onChange","e","target","type","TextArea","offset","htmlType","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/DineshkumarMurugados/Downloads/Code3Crafters-main/src/components/home/ContactForm/ContactForm.jsx"],"sourcesContent":["// contactform.jsx\nimport { Button, Form, Input, message } from \"antd\";\nimport React, { useState } from \"react\";\nimport emailjs from \"@emailjs/browser\";\nimport { Helmet } from \"react-helmet-async\";\n\nconst EmailForm = () => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [messageText, setMessage] = useState(\"\");\n  const [successMessageVisible, setSuccessMessageVisible] = useState(false);\n\n  const onFinish = async (values) => {\n    // Your EmailJS service ID, template ID, and Public Key\n    const serviceId = \"service_o9airgw\";\n    const templateId = \"template_y517hvw\";\n    const publicKey = \"vMLFO9hxLRqh92bFz\";\n\n    // Create a new object that contains dynamic template params\n    const templateParams = {\n      from_name: values.name,\n      from_email: values.email,\n      from_phone: values.phone,\n      to_name: \"Web Wizard\",\n      message: values.message,\n    };\n\n    try {\n      // Send the email using EmailJS\n      await emailjs.send(serviceId, templateId, templateParams, publicKey);\n      setSuccessMessageVisible(true);\n    } catch (error) {\n      console.error(\"Error sending email:\", error);\n      message.error(\"Failed to send email. Please try again later.\");\n    }\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  return (\n\n    <><Helmet>\n      <title>Code3Crafters</title>\n      <meta\n        name=\"description\"\n        content=\"\"></meta>\n    </Helmet>\n    <div className=\"d-flex flex-column align-items-center\">\n        <Form\n          className=\"w-50\"\n          name=\"basic\"\n          labelCol={{\n            span: 8,\n          }}\n          wrapperCol={{\n            span: 16,\n          }}\n          style={{\n            maxWidth: 600,\n          }}\n          initialValues={{\n            remember: true,\n          }}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n          autoComplete=\"off\"\n        >\n          <Form.Item\n            label=\"Name\"\n            name=\"name\"\n            rules={[\n              {\n                required: true,\n                message: \"Please type your name!\",\n              },\n            ]}\n          >\n            <Input value={name} onChange={(e) => setName(e.target.value)} />\n          </Form.Item>\n          <Form.Item\n            name=\"email\"\n            label=\"Email\"\n            rules={[\n              {\n                type: \"email\",\n                required: true,\n                message: \"Please enter a valid email!\",\n              },\n            ]}\n          >\n            <Input value={email} onChange={(e) => setEmail(e.target.value)} />\n          </Form.Item>\n          <Form.Item\n            name=\"phone\"\n            label=\"Phone Number\"\n            rules={[\n              {\n                required: true,\n                message: \"Please type your number!\",\n              },\n            ]}\n          >\n            <Input\n              type=\"number\"\n              value={phone}\n              onChange={(e) => setPhone(e.target.value)} />\n          </Form.Item>\n          <Form.Item\n            name=\"message\"\n            label=\"Message\"\n            rules={[\n              {\n                required: true,\n                message: \"Please enter your message!\",\n              },\n            ]}\n          >\n            <Input.TextArea\n              value={messageText}\n              onChange={(e) => setMessage(e.target.value)} />\n          </Form.Item>\n          <Form.Item\n            wrapperCol={{\n              offset: 8,\n              span: 16,\n            }}\n          >\n            <Button type=\"primary\" htmlType=\"submit\">\n              Submit\n            </Button>\n          </Form.Item>\n        </Form>\n        {successMessageVisible && (\n          <div style={{ marginTop: \"20px\" }}>Email sent successfully!</div>\n        )}\n      // Remove unnecessary closing tags\n      // </div></>\n  );\n};\n\nexport default EmailForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}