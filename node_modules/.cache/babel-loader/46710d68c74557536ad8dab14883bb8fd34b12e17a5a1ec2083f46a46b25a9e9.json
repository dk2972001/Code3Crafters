{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kisho\\\\OneDrive\\\\Desktop\\\\home\\\\src\\\\components\\\\home\\\\ProjectCard.jsx\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport Col from \"react-bootstrap/Col\";\nimport Card from \"react-bootstrap/Card\";\nimport Skeleton from \"react-loading-skeleton\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectCard = _ref => {\n  let {\n    value\n  } = _ref;\n  const {\n    name,\n    description,\n    svn_url,\n    stargazers_count,\n    languages_url,\n    pushed_at\n  } = value;\n  return /*#__PURE__*/_jsxDEV(Col, {\n    md: 6,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"card shadow-lg p-3 mb-5 bg-white rounded\",\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          as: \"h5\",\n          children: [name || /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 40\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [!description ? \"\" : description || /*#__PURE__*/_jsxDEV(Skeleton, {\n            count: 3\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 60\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), svn_url ? /*#__PURE__*/_jsxDEV(CardButtons, {\n          svn_url: svn_url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 22\n        }, this) : /*#__PURE__*/_jsxDEV(Skeleton, {\n          count: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 58\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), languages_url ? /*#__PURE__*/_jsxDEV(Language, {\n          languages_url: languages_url,\n          repo_url: svn_url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Skeleton, {\n          count: 3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n          star_count: stargazers_count,\n          pushed_at: pushed_at\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_c = ProjectCard;\nconst CardButtons = _ref2 => {\n  let {\n    svn_url\n  } = _ref2;\n} // return (\n//   <div className=\"d-grid gap-2 d-md-block\">\n//      <a\n//       href={`${svn_url}/archive/master.zip`}\n//       className=\"btn btn-outline-secondary mx-2\"\n//     >\n//       <i className=\"fab fa-github\" /> Clone Project\n//     </a>\n//     <a href={svn_url} target=\" _blank\" className=\"btn btn-outline-secondary mx-2\">\n//       <i className=\"fab fa-github\" /> Repo\n//     </a> \n//   </div>\n// );\n;\n_c2 = CardButtons;\nconst Language = _ref3 => {\n  let {\n    languages_url,\n    repo_url\n  } = _ref3;\n} // const [data, setData] = useState([]);\n\n// const handleRequest = useCallback(async () => {\n//   try {\n//     const response = await axios.get(languages_url);\n//     return setData(response.data);\n//   } catch (error) {\n//     console.error(error.message);\n//   }\n// }, [languages_url]);\n\n// useEffect(() => {\n//   handleRequest();\n// }, [handleRequest]);\n\n// const array = [];\n// let total_count = 0;\n// for (let index in data) {\n//   array.push(index);\n//   total_count += data[index];\n// }\n\n// return (\n//   <div className=\"pb-3\">\n//      Languages:{\" \"}\n//     {array.length\n//       ? array.map((language) => (\n//         <a\n//           key={language}\n//           className=\"card-link\"\n//           href={repo_url + `/search?l=${language}`}\n//           target=\" _blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           <span className=\"badge bg-light text-dark\">\n//             {language}:{\" \"}\n//             {Math.trunc((data[language] / total_count) * 1000) / 10} %\n//           </span>\n//         </a>\n\n//       ))\n//       : \"code yet to be deployed.\"} \n//   </div>\n// );\n;\n\n//const CardFooter = ({ star_count, repo_url, pushed_at }) => {\n// const [updated_at, setUpdated_at] = useState(\"0 mints\");\n\n// const handleUpdatetime = useCallback(() => {\n//   const date = new Date(pushed_at);\n//   const nowdate = new Date();\n//   const diff = nowdate.getTime() - date.getTime();\n//   const hours = Math.trunc(diff / 1000 / 60 / 60);\n\n//   if (hours < 24) {\n//     if (hours < 1) return setUpdated_at(\"just now\");\n//     let measurement = hours === 1 ? \"hour\" : \"hours\";\n//     return setUpdated_at(`${hours.toString()} ${measurement} ago`);\n//   } else {\n//     const options = { day: \"numeric\", month: \"long\", year: \"numeric\" };\n//     const time = new Intl.DateTimeFormat(\"en-US\", options).format(date);\n//     return setUpdated_at(`on ${time}`);\n//   }\n// }, [pushed_at]);\n\n// useEffect(() => {\n//   handleUpdatetime();\n// }, [handleUpdatetime]);\n\n// return (\n//   <p className=\"card-text\">\n//      <a\n//       href={repo_url + \"/stargazers\"}\n//       target=\" _blank\"\n//       className=\"text-dark text-decoration-none\"\n//     >\n//       <span className=\"text-dark card-link mr-4\">\n//         <i className=\"fab fa-github\" /> Stars{\" \"}\n//         <span className=\"badge badge-dark\">{star_count}</span>\n//       </span>\n//     </a> \n//     {/* <small className=\"text-muted\">Updated {updated_at}</small> */}\n//   </p>\n// );\n//};\n_c3 = Language;\nexport default ProjectCard;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ProjectCard\");\n$RefreshReg$(_c2, \"CardButtons\");\n$RefreshReg$(_c3, \"Language\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Col","Card","Skeleton","axios","jsxDEV","_jsxDEV","ProjectCard","_ref","value","name","description","svn_url","stargazers_count","languages_url","pushed_at","md","children","className","Body","Title","as","fileName","_jsxFileName","lineNumber","columnNumber","Text","count","CardButtons","Language","repo_url","CardFooter","star_count","_c","_ref2","_c2","_ref3","_c3","$RefreshReg$"],"sources":["C:/Users/kisho/OneDrive/Desktop/home/src/components/home/ProjectCard.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport axios from \"axios\";\r\n\r\nconst ProjectCard = ({ value }) => {\r\n  const {\r\n    name,\r\n    description,\r\n    svn_url,\r\n    stargazers_count,\r\n    languages_url,\r\n    pushed_at,\r\n  } = value;\r\n\r\n  return (\r\n    <Col md={6}>\r\n      <Card className=\"card shadow-lg p-3 mb-5 bg-white rounded\">\r\n        <Card.Body>\r\n          <Card.Title as=\"h5\">{name || <Skeleton />} </Card.Title>\r\n          <Card.Text>{(!description) ? \"\" : description || <Skeleton count={3} />} </Card.Text>\r\n          {svn_url ? <CardButtons svn_url={svn_url} /> : <Skeleton count={2} />}\r\n          <hr />\r\n          {languages_url ? (\r\n            <Language languages_url={languages_url} repo_url={svn_url} />\r\n          ) : (\r\n            <Skeleton count={3} />\r\n          )}\r\n          <CardFooter star_count={stargazers_count} pushed_at={pushed_at} />\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n  );\r\n};\r\n\r\nconst CardButtons = ({ svn_url }) => {\r\n  // return (\r\n  //   <div className=\"d-grid gap-2 d-md-block\">\r\n  //      <a\r\n  //       href={`${svn_url}/archive/master.zip`}\r\n  //       className=\"btn btn-outline-secondary mx-2\"\r\n  //     >\r\n  //       <i className=\"fab fa-github\" /> Clone Project\r\n  //     </a>\r\n  //     <a href={svn_url} target=\" _blank\" className=\"btn btn-outline-secondary mx-2\">\r\n  //       <i className=\"fab fa-github\" /> Repo\r\n  //     </a> \r\n  //   </div>\r\n  // );\r\n};\r\n\r\nconst Language = ({ languages_url, repo_url }) => {\r\n  // const [data, setData] = useState([]);\r\n\r\n  // const handleRequest = useCallback(async () => {\r\n  //   try {\r\n  //     const response = await axios.get(languages_url);\r\n  //     return setData(response.data);\r\n  //   } catch (error) {\r\n  //     console.error(error.message);\r\n  //   }\r\n  // }, [languages_url]);\r\n\r\n  // useEffect(() => {\r\n  //   handleRequest();\r\n  // }, [handleRequest]);\r\n\r\n  // const array = [];\r\n  // let total_count = 0;\r\n  // for (let index in data) {\r\n  //   array.push(index);\r\n  //   total_count += data[index];\r\n  // }\r\n\r\n  // return (\r\n  //   <div className=\"pb-3\">\r\n  //      Languages:{\" \"}\r\n  //     {array.length\r\n  //       ? array.map((language) => (\r\n  //         <a\r\n  //           key={language}\r\n  //           className=\"card-link\"\r\n  //           href={repo_url + `/search?l=${language}`}\r\n  //           target=\" _blank\"\r\n  //           rel=\"noopener noreferrer\"\r\n  //         >\r\n  //           <span className=\"badge bg-light text-dark\">\r\n  //             {language}:{\" \"}\r\n  //             {Math.trunc((data[language] / total_count) * 1000) / 10} %\r\n  //           </span>\r\n  //         </a>\r\n\r\n  //       ))\r\n  //       : \"code yet to be deployed.\"} \r\n  //   </div>\r\n  // );\r\n};\r\n\r\n//const CardFooter = ({ star_count, repo_url, pushed_at }) => {\r\n  // const [updated_at, setUpdated_at] = useState(\"0 mints\");\r\n\r\n  // const handleUpdatetime = useCallback(() => {\r\n  //   const date = new Date(pushed_at);\r\n  //   const nowdate = new Date();\r\n  //   const diff = nowdate.getTime() - date.getTime();\r\n  //   const hours = Math.trunc(diff / 1000 / 60 / 60);\r\n\r\n  //   if (hours < 24) {\r\n  //     if (hours < 1) return setUpdated_at(\"just now\");\r\n  //     let measurement = hours === 1 ? \"hour\" : \"hours\";\r\n  //     return setUpdated_at(`${hours.toString()} ${measurement} ago`);\r\n  //   } else {\r\n  //     const options = { day: \"numeric\", month: \"long\", year: \"numeric\" };\r\n  //     const time = new Intl.DateTimeFormat(\"en-US\", options).format(date);\r\n  //     return setUpdated_at(`on ${time}`);\r\n  //   }\r\n  // }, [pushed_at]);\r\n\r\n  // useEffect(() => {\r\n  //   handleUpdatetime();\r\n  // }, [handleUpdatetime]);\r\n\r\n  // return (\r\n  //   <p className=\"card-text\">\r\n  //      <a\r\n  //       href={repo_url + \"/stargazers\"}\r\n  //       target=\" _blank\"\r\n  //       className=\"text-dark text-decoration-none\"\r\n  //     >\r\n  //       <span className=\"text-dark card-link mr-4\">\r\n  //         <i className=\"fab fa-github\" /> Stars{\" \"}\r\n  //         <span className=\"badge badge-dark\">{star_count}</span>\r\n  //       </span>\r\n  //     </a> \r\n  //     {/* <small className=\"text-muted\">Updated {updated_at}</small> */}\r\n  //   </p>\r\n  // );\r\n//};\r\n\r\nexport default ProjectCard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}