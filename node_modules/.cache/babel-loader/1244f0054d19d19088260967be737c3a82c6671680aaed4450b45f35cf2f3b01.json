{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kisho\\\\OneDrive\\\\Desktop\\\\home\\\\src\\\\components\\\\home\\\\Project.jsx\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport { Jumbotron } from \"./migration\";\nimport Row from \"react-bootstrap/Row\";\nimport ProjectCard from \"./ProjectCard\";\nimport axios from \"axios\";\nimport projectsData from \"./servies\"; // Adjust the path based on your project structure\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Project = _ref => {\n  let {\n    heading,\n    length,\n    specfic\n  } = _ref;\n  const dummyProjectsArr = new Array(length + specfic.length).fill({\n    name: null,\n    description: null,\n    svn_url: null,\n    stargazers_count: null,\n    languages_url: null,\n    pushed_at: null\n  });\n  return /*#__PURE__*/_jsxDEV(Jumbotron, {\n    fluid: true,\n    id: \"projects\",\n    className: \"bg-light m-0\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"display-4 pb-5 text-center\",\n        children: heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: projectsData.map((project, index) => /*#__PURE__*/_jsxDEV(ProjectCard, {\n          id: `project-card-${index}`,\n          value: project\n        }, `project-card-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_c = Project;\nexport default Project;\nvar _c;\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Container","Jumbotron","Row","ProjectCard","axios","projectsData","jsxDEV","_jsxDEV","Project","_ref","heading","length","specfic","dummyProjectsArr","Array","fill","name","description","svn_url","stargazers_count","languages_url","pushed_at","fluid","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","project","index","value","_c","$RefreshReg$"],"sources":["C:/Users/kisho/OneDrive/Desktop/home/src/components/home/Project.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { Jumbotron } from \"./migration\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport ProjectCard from \"./ProjectCard\";\r\nimport axios from \"axios\";\r\n\r\nimport projectsData from \"./servies\"; // Adjust the path based on your project structure\r\n\r\nconst Project = ({ heading, length, specfic }) => {\r\n  const dummyProjectsArr = new Array(length + specfic.length).fill({\r\n    name: null,\r\n    description: null,\r\n    svn_url: null,\r\n    stargazers_count: null,\r\n    languages_url: null,\r\n    pushed_at: null,\r\n  });\r\n\r\n  return (\r\n    <Jumbotron fluid id=\"projects\" className=\"bg-light m-0\">\r\n      <Container className=\"\">\r\n        <h2 className=\"display-4 pb-5 text-center\">{heading}</h2>\r\n        <Row>\r\n          {projectsData.map((project, index) => (\r\n            <ProjectCard\r\n              key={`project-card-${index}`}\r\n              id={`project-card-${index}`}\r\n              value={project}\r\n            />\r\n          ))}\r\n        </Row>\r\n      </Container>\r\n    </Jumbotron>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,OAAOC,SAAS,MAAM,2BAA2B;AACjD,SAASC,SAAS,QAAQ,aAAa;AACvC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAOC,YAAY,MAAM,WAAW,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,OAAO,GAAGC,IAAA,IAAkC;EAAA,IAAjC;IAAEC,OAAO;IAAEC,MAAM;IAAEC;EAAQ,CAAC,GAAAH,IAAA;EAC3C,MAAMI,gBAAgB,GAAG,IAAIC,KAAK,CAACH,MAAM,GAAGC,OAAO,CAACD,MAAM,CAAC,CAACI,IAAI,CAAC;IAC/DC,IAAI,EAAE,IAAI;IACVC,WAAW,EAAE,IAAI;IACjBC,OAAO,EAAE,IAAI;IACbC,gBAAgB,EAAE,IAAI;IACtBC,aAAa,EAAE,IAAI;IACnBC,SAAS,EAAE;EACb,CAAC,CAAC;EAEF,oBACEd,OAAA,CAACN,SAAS;IAACqB,KAAK;IAACC,EAAE,EAAC,UAAU;IAACC,SAAS,EAAC,cAAc;IAAAC,QAAA,eACrDlB,OAAA,CAACP,SAAS;MAACwB,SAAS,EAAC,EAAE;MAAAC,QAAA,gBACrBlB,OAAA;QAAIiB,SAAS,EAAC,4BAA4B;QAAAC,QAAA,EAAEf;MAAO;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACzDtB,OAAA,CAACL,GAAG;QAAAuB,QAAA,EACDpB,YAAY,CAACyB,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC/BzB,OAAA,CAACJ,WAAW;UAEVoB,EAAE,EAAG,gBAAeS,KAAM,EAAE;UAC5BC,KAAK,EAAEF;QAAQ,GAFT,gBAAeC,KAAM,EAAC;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAG7B,CACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEhB,CAAC;AAACK,EAAA,GA1BI1B,OAAO;AA4Bb,eAAeA,OAAO;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}