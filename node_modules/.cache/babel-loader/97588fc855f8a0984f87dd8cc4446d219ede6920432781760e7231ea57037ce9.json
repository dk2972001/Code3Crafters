{"ast":null,"code":"import _defineProperty from \"C:/Users/kisho/OneDrive/Pictures/home/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { unit } from '@ant-design/cssinjs';\nimport { prepareComponentToken, prepareToken } from '.';\nimport { resetComponent } from '../../style';\nimport { genPresetColor, genStyleHooks } from '../../theme/internal';\n// ============================== Ribbon ==============================\nvar genRibbonStyle = function genRibbonStyle(token) {\n  var _Object$assign, _Object$assign2, _ref3;\n  var antCls = token.antCls,\n    badgeFontHeight = token.badgeFontHeight,\n    marginXS = token.marginXS,\n    badgeRibbonOffset = token.badgeRibbonOffset,\n    calc = token.calc;\n  var ribbonPrefixCls = \"\".concat(antCls, \"-ribbon\");\n  var ribbonWrapperPrefixCls = \"\".concat(antCls, \"-ribbon-wrapper\");\n  var statusRibbonPreset = genPresetColor(token, function (colorKey, _ref) {\n    var darkColor = _ref.darkColor;\n    return _defineProperty({}, \"&\".concat(ribbonPrefixCls, \"-color-\").concat(colorKey), {\n      background: darkColor,\n      color: darkColor\n    });\n  });\n  return _ref3 = {}, _defineProperty(_ref3, \"\".concat(ribbonWrapperPrefixCls), {\n    position: 'relative'\n  }), _defineProperty(_ref3, \"\".concat(ribbonPrefixCls), Object.assign(Object.assign(Object.assign(Object.assign({}, resetComponent(token)), (_Object$assign = {\n    position: 'absolute',\n    top: marginXS,\n    padding: \"0 \".concat(unit(token.paddingXS)),\n    color: token.colorPrimary,\n    lineHeight: unit(badgeFontHeight),\n    whiteSpace: 'nowrap',\n    backgroundColor: token.colorPrimary,\n    borderRadius: token.borderRadiusSM\n  }, _defineProperty(_Object$assign, \"\".concat(ribbonPrefixCls, \"-text\"), {\n    color: token.colorTextLightSolid\n  }), _defineProperty(_Object$assign, \"\".concat(ribbonPrefixCls, \"-corner\"), {\n    position: 'absolute',\n    top: '100%',\n    width: badgeRibbonOffset,\n    height: badgeRibbonOffset,\n    color: 'currentcolor',\n    border: \"\".concat(unit(calc(badgeRibbonOffset).div(2).equal()), \" solid\"),\n    transform: token.badgeRibbonCornerTransform,\n    transformOrigin: 'top',\n    filter: token.badgeRibbonCornerFilter\n  }), _Object$assign)), statusRibbonPreset), (_Object$assign2 = {}, _defineProperty(_Object$assign2, \"&\".concat(ribbonPrefixCls, \"-placement-end\"), _defineProperty({\n    insetInlineEnd: calc(badgeRibbonOffset).mul(-1).equal(),\n    borderEndEndRadius: 0\n  }, \"\".concat(ribbonPrefixCls, \"-corner\"), {\n    insetInlineEnd: 0,\n    borderInlineEndColor: 'transparent',\n    borderBlockEndColor: 'transparent'\n  })), _defineProperty(_Object$assign2, \"&\".concat(ribbonPrefixCls, \"-placement-start\"), _defineProperty({\n    insetInlineStart: calc(badgeRibbonOffset).mul(-1).equal(),\n    borderEndStartRadius: 0\n  }, \"\".concat(ribbonPrefixCls, \"-corner\"), {\n    insetInlineStart: 0,\n    borderBlockEndColor: 'transparent',\n    borderInlineStartColor: 'transparent'\n  })), _defineProperty(_Object$assign2, '&-rtl', {\n    direction: 'rtl'\n  }), _Object$assign2))), _ref3;\n};\n// ============================== Export ==============================\nexport default genStyleHooks(['Badge', 'Ribbon'], function (token) {\n  var badgeToken = prepareToken(token);\n  return genRibbonStyle(badgeToken);\n}, prepareComponentToken);","map":{"version":3,"names":["unit","prepareComponentToken","prepareToken","resetComponent","genPresetColor","genStyleHooks","genRibbonStyle","token","_Object$assign","_Object$assign2","_ref3","antCls","badgeFontHeight","marginXS","badgeRibbonOffset","calc","ribbonPrefixCls","concat","ribbonWrapperPrefixCls","statusRibbonPreset","colorKey","_ref","darkColor","_defineProperty","background","color","position","Object","assign","top","padding","paddingXS","colorPrimary","lineHeight","whiteSpace","backgroundColor","borderRadius","borderRadiusSM","colorTextLightSolid","width","height","border","div","equal","transform","badgeRibbonCornerTransform","transformOrigin","filter","badgeRibbonCornerFilter","insetInlineEnd","mul","borderEndEndRadius","borderInlineEndColor","borderBlockEndColor","insetInlineStart","borderEndStartRadius","borderInlineStartColor","direction","badgeToken"],"sources":["C:/Users/kisho/OneDrive/Pictures/home/node_modules/antd/es/badge/style/ribbon.js"],"sourcesContent":["import { unit } from '@ant-design/cssinjs';\nimport { prepareComponentToken, prepareToken } from '.';\nimport { resetComponent } from '../../style';\nimport { genPresetColor, genStyleHooks } from '../../theme/internal';\n// ============================== Ribbon ==============================\nconst genRibbonStyle = token => {\n  const {\n    antCls,\n    badgeFontHeight,\n    marginXS,\n    badgeRibbonOffset,\n    calc\n  } = token;\n  const ribbonPrefixCls = `${antCls}-ribbon`;\n  const ribbonWrapperPrefixCls = `${antCls}-ribbon-wrapper`;\n  const statusRibbonPreset = genPresetColor(token, (colorKey, _ref) => {\n    let {\n      darkColor\n    } = _ref;\n    return {\n      [`&${ribbonPrefixCls}-color-${colorKey}`]: {\n        background: darkColor,\n        color: darkColor\n      }\n    };\n  });\n  return {\n    [`${ribbonWrapperPrefixCls}`]: {\n      position: 'relative'\n    },\n    [`${ribbonPrefixCls}`]: Object.assign(Object.assign(Object.assign(Object.assign({}, resetComponent(token)), {\n      position: 'absolute',\n      top: marginXS,\n      padding: `0 ${unit(token.paddingXS)}`,\n      color: token.colorPrimary,\n      lineHeight: unit(badgeFontHeight),\n      whiteSpace: 'nowrap',\n      backgroundColor: token.colorPrimary,\n      borderRadius: token.borderRadiusSM,\n      [`${ribbonPrefixCls}-text`]: {\n        color: token.colorTextLightSolid\n      },\n      [`${ribbonPrefixCls}-corner`]: {\n        position: 'absolute',\n        top: '100%',\n        width: badgeRibbonOffset,\n        height: badgeRibbonOffset,\n        color: 'currentcolor',\n        border: `${unit(calc(badgeRibbonOffset).div(2).equal())} solid`,\n        transform: token.badgeRibbonCornerTransform,\n        transformOrigin: 'top',\n        filter: token.badgeRibbonCornerFilter\n      }\n    }), statusRibbonPreset), {\n      [`&${ribbonPrefixCls}-placement-end`]: {\n        insetInlineEnd: calc(badgeRibbonOffset).mul(-1).equal(),\n        borderEndEndRadius: 0,\n        [`${ribbonPrefixCls}-corner`]: {\n          insetInlineEnd: 0,\n          borderInlineEndColor: 'transparent',\n          borderBlockEndColor: 'transparent'\n        }\n      },\n      [`&${ribbonPrefixCls}-placement-start`]: {\n        insetInlineStart: calc(badgeRibbonOffset).mul(-1).equal(),\n        borderEndStartRadius: 0,\n        [`${ribbonPrefixCls}-corner`]: {\n          insetInlineStart: 0,\n          borderBlockEndColor: 'transparent',\n          borderInlineStartColor: 'transparent'\n        }\n      },\n      // ====================== RTL =======================\n      '&-rtl': {\n        direction: 'rtl'\n      }\n    })\n  };\n};\n// ============================== Export ==============================\nexport default genStyleHooks(['Badge', 'Ribbon'], token => {\n  const badgeToken = prepareToken(token);\n  return genRibbonStyle(badgeToken);\n}, prepareComponentToken);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}