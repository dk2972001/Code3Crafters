{"ast":null,"code":"import _defineProperty from \"C:/Users/kisho/OneDrive/Pictures/home/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { unit } from '@ant-design/cssinjs';\nimport { TinyColor } from '@ctrl/tinycolor';\nimport { resetComponent } from '../../style';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\nvar genQRCodeStyle = function genQRCodeStyle(token) {\n  var _Object$assign, _ref;\n  var componentCls = token.componentCls,\n    lineWidth = token.lineWidth,\n    lineType = token.lineType,\n    colorSplit = token.colorSplit;\n  return _ref = {}, _defineProperty(_ref, componentCls, Object.assign(Object.assign({}, resetComponent(token)), (_Object$assign = {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: token.paddingSM,\n    backgroundColor: token.colorWhite,\n    borderRadius: token.borderRadiusLG,\n    border: \"\".concat(unit(lineWidth), \" \").concat(lineType, \" \").concat(colorSplit),\n    position: 'relative',\n    overflow: 'hidden'\n  }, _defineProperty(_Object$assign, \"& > \".concat(componentCls, \"-mask\"), _defineProperty({\n    position: 'absolute',\n    insetBlockStart: 0,\n    insetInlineStart: 0,\n    zIndex: 10,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    height: '100%',\n    color: token.colorText,\n    lineHeight: token.lineHeight,\n    background: token.QRCodeMaskBackgroundColor,\n    textAlign: 'center'\n  }, \"& > \".concat(componentCls, \"-expired, & > \").concat(componentCls, \"-scanned\"), {\n    color: token.QRCodeTextColor\n  })), _defineProperty(_Object$assign, '> canvas', {\n    alignSelf: 'stretch',\n    flex: 'auto',\n    minWidth: 0\n  }), _defineProperty(_Object$assign, '&-icon', {\n    marginBlockEnd: token.marginXS,\n    fontSize: token.controlHeight\n  }), _Object$assign))), _defineProperty(_ref, \"\".concat(componentCls, \"-borderless\"), {\n    borderColor: 'transparent'\n  }), _ref;\n};\nexport var prepareComponentToken = function prepareComponentToken(token) {\n  return {\n    QRCodeMaskBackgroundColor: new TinyColor(token.colorBgContainer).setAlpha(0.96).toRgbString()\n  };\n};\nexport default genStyleHooks('QRCode', function (token) {\n  var mergedToken = mergeToken(token, {\n    QRCodeTextColor: token.colorText\n  });\n  return genQRCodeStyle(mergedToken);\n}, prepareComponentToken);","map":{"version":3,"names":["unit","TinyColor","resetComponent","genStyleHooks","mergeToken","genQRCodeStyle","token","_Object$assign","_ref","componentCls","lineWidth","lineType","colorSplit","_defineProperty","Object","assign","display","justifyContent","alignItems","padding","paddingSM","backgroundColor","colorWhite","borderRadius","borderRadiusLG","border","concat","position","overflow","insetBlockStart","insetInlineStart","zIndex","flexDirection","width","height","color","colorText","lineHeight","background","QRCodeMaskBackgroundColor","textAlign","QRCodeTextColor","alignSelf","flex","minWidth","marginBlockEnd","marginXS","fontSize","controlHeight","borderColor","prepareComponentToken","colorBgContainer","setAlpha","toRgbString","mergedToken"],"sources":["C:/Users/kisho/OneDrive/Pictures/home/node_modules/antd/es/qr-code/style/index.js"],"sourcesContent":["import { unit } from '@ant-design/cssinjs';\nimport { TinyColor } from '@ctrl/tinycolor';\nimport { resetComponent } from '../../style';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\nconst genQRCodeStyle = token => {\n  const {\n    componentCls,\n    lineWidth,\n    lineType,\n    colorSplit\n  } = token;\n  return {\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      padding: token.paddingSM,\n      backgroundColor: token.colorWhite,\n      borderRadius: token.borderRadiusLG,\n      border: `${unit(lineWidth)} ${lineType} ${colorSplit}`,\n      position: 'relative',\n      overflow: 'hidden',\n      [`& > ${componentCls}-mask`]: {\n        position: 'absolute',\n        insetBlockStart: 0,\n        insetInlineStart: 0,\n        zIndex: 10,\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '100%',\n        height: '100%',\n        color: token.colorText,\n        lineHeight: token.lineHeight,\n        background: token.QRCodeMaskBackgroundColor,\n        textAlign: 'center',\n        [`& > ${componentCls}-expired, & > ${componentCls}-scanned`]: {\n          color: token.QRCodeTextColor\n        }\n      },\n      '> canvas': {\n        alignSelf: 'stretch',\n        flex: 'auto',\n        minWidth: 0\n      },\n      '&-icon': {\n        marginBlockEnd: token.marginXS,\n        fontSize: token.controlHeight\n      }\n    }),\n    [`${componentCls}-borderless`]: {\n      borderColor: 'transparent'\n    }\n  };\n};\nexport const prepareComponentToken = token => ({\n  QRCodeMaskBackgroundColor: new TinyColor(token.colorBgContainer).setAlpha(0.96).toRgbString()\n});\nexport default genStyleHooks('QRCode', token => {\n  const mergedToken = mergeToken(token, {\n    QRCodeTextColor: token.colorText\n  });\n  return genQRCodeStyle(mergedToken);\n}, prepareComponentToken);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}