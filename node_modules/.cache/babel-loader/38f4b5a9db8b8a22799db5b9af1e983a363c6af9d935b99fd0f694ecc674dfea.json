{"ast":null,"code":"import { validateLimitRateParams } from '../validateLimitRateParams/validateLimitRateParams';\nvar getLeftTime = function getLeftTime(id, throttle, storage) {\n  var lastTime = Number(storage.get(id) || 0);\n  return throttle - Date.now() + lastTime;\n};\nvar removeRecord = function removeRecord(id, leftTime, storage) {\n  setTimeout(function () {\n    storage.remove(id);\n  }, leftTime);\n};\nexport var isLimitRateHit = function isLimitRateHit(defaultID, options, storage) {\n  if (!options.throttle || !storage) {\n    return false;\n  }\n  validateLimitRateParams(options.throttle, options.id);\n  var id = options.id || defaultID;\n  var leftTime = getLeftTime(id, options.throttle, storage);\n  if (leftTime > 0) {\n    removeRecord(id, leftTime, storage);\n    return true;\n  }\n  storage.set(id, Date.now().toString());\n  removeRecord(id, options.throttle, storage);\n  return false;\n};","map":{"version":3,"names":["validateLimitRateParams","getLeftTime","id","throttle","storage","lastTime","Number","get","Date","now","removeRecord","leftTime","setTimeout","remove","isLimitRateHit","defaultID","options","set","toString"],"sources":["C:/Users/kisho/OneDrive/Pictures/home/node_modules/@emailjs/browser/es/utils/isLimitRateHit/isLimitRateHit.js"],"sourcesContent":["import { validateLimitRateParams } from '../validateLimitRateParams/validateLimitRateParams';\nconst getLeftTime = (id, throttle, storage) => {\n    const lastTime = Number(storage.get(id) || 0);\n    return throttle - Date.now() + lastTime;\n};\nconst removeRecord = (id, leftTime, storage) => {\n    setTimeout(() => {\n        storage.remove(id);\n    }, leftTime);\n};\nexport const isLimitRateHit = (defaultID, options, storage) => {\n    if (!options.throttle || !storage) {\n        return false;\n    }\n    validateLimitRateParams(options.throttle, options.id);\n    const id = options.id || defaultID;\n    const leftTime = getLeftTime(id, options.throttle, storage);\n    if (leftTime > 0) {\n        removeRecord(id, leftTime, storage);\n        return true;\n    }\n    storage.set(id, Date.now().toString());\n    removeRecord(id, options.throttle, storage);\n    return false;\n};\n"],"mappings":"AAAA,SAASA,uBAAuB,QAAQ,oDAAoD;AAC5F,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAIC,EAAE,EAAEC,QAAQ,EAAEC,OAAO,EAAK;EAC3C,IAAMC,QAAQ,GAAGC,MAAM,CAACF,OAAO,CAACG,GAAG,CAACL,EAAE,CAAC,IAAI,CAAC,CAAC;EAC7C,OAAOC,QAAQ,GAAGK,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGJ,QAAQ;AAC3C,CAAC;AACD,IAAMK,YAAY,GAAG,SAAfA,YAAYA,CAAIR,EAAE,EAAES,QAAQ,EAAEP,OAAO,EAAK;EAC5CQ,UAAU,CAAC,YAAM;IACbR,OAAO,CAACS,MAAM,CAACX,EAAE,CAAC;EACtB,CAAC,EAAES,QAAQ,CAAC;AAChB,CAAC;AACD,OAAO,IAAMG,cAAc,GAAG,SAAjBA,cAAcA,CAAIC,SAAS,EAAEC,OAAO,EAAEZ,OAAO,EAAK;EAC3D,IAAI,CAACY,OAAO,CAACb,QAAQ,IAAI,CAACC,OAAO,EAAE;IAC/B,OAAO,KAAK;EAChB;EACAJ,uBAAuB,CAACgB,OAAO,CAACb,QAAQ,EAAEa,OAAO,CAACd,EAAE,CAAC;EACrD,IAAMA,EAAE,GAAGc,OAAO,CAACd,EAAE,IAAIa,SAAS;EAClC,IAAMJ,QAAQ,GAAGV,WAAW,CAACC,EAAE,EAAEc,OAAO,CAACb,QAAQ,EAAEC,OAAO,CAAC;EAC3D,IAAIO,QAAQ,GAAG,CAAC,EAAE;IACdD,YAAY,CAACR,EAAE,EAAES,QAAQ,EAAEP,OAAO,CAAC;IACnC,OAAO,IAAI;EACf;EACAA,OAAO,CAACa,GAAG,CAACf,EAAE,EAAEM,IAAI,CAACC,GAAG,CAAC,CAAC,CAACS,QAAQ,CAAC,CAAC,CAAC;EACtCR,YAAY,CAACR,EAAE,EAAEc,OAAO,CAACb,QAAQ,EAAEC,OAAO,CAAC;EAC3C,OAAO,KAAK;AAChB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}