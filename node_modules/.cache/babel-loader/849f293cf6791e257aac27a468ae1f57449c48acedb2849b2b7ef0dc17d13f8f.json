{"ast":null,"code":"import React,{useState,useEffect,useCallback}from\"react\";import Col from\"react-bootstrap/Col\";import Card from\"react-bootstrap/Card\";import Skeleton from\"react-loading-skeleton\";import axios from\"axios\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const ProjectCard=_ref=>{let{value}=_ref;const{name,description,svn_url,stargazers_count,languages_url,pushed_at}=value;return/*#__PURE__*/_jsx(Col,{md:6,children:/*#__PURE__*/_jsx(Card,{className:\"card shadow-lg p-3 mb-5 bg-white rounded\",children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsxs(Card.Title,{as:\"h5\",children:[name||/*#__PURE__*/_jsx(Skeleton,{}),\" \"]}),/*#__PURE__*/_jsxs(Card.Text,{children:[!description?\"\":description||/*#__PURE__*/_jsx(Skeleton,{count:3}),\" \"]})]})})});};const CardButtons=_ref2=>{let{svn_url}=_ref2;}// return (\n//   <div className=\"d-grid gap-2 d-md-block\">\n//      <a\n//       href={`${svn_url}/archive/master.zip`}\n//       className=\"btn btn-outline-secondary mx-2\"\n//     >\n//       <i className=\"fab fa-github\" /> Clone Project\n//     </a>\n//     <a href={svn_url} target=\" _blank\" className=\"btn btn-outline-secondary mx-2\">\n//       <i className=\"fab fa-github\" /> Repo\n//     </a> \n//   </div>\n// );\n;const Language=_ref3=>{let{languages_url,repo_url}=_ref3;}// const [data, setData] = useState([]);\n// const handleRequest = useCallback(async () => {\n//   try {\n//     const response = await axios.get(languages_url);\n//     return setData(response.data);\n//   } catch (error) {\n//     console.error(error.message);\n//   }\n// }, [languages_url]);\n// useEffect(() => {\n//   handleRequest();\n// }, [handleRequest]);\n// const array = [];\n// let total_count = 0;\n// for (let index in data) {\n//   array.push(index);\n//   total_count += data[index];\n// }\n// return (\n//   <div className=\"pb-3\">\n//      Languages:{\" \"}\n//     {array.length\n//       ? array.map((language) => (\n//         <a\n//           key={language}\n//           className=\"card-link\"\n//           href={repo_url + `/search?l=${language}`}\n//           target=\" _blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           <span className=\"badge bg-light text-dark\">\n//             {language}:{\" \"}\n//             {Math.trunc((data[language] / total_count) * 1000) / 10} %\n//           </span>\n//         </a>\n//       ))\n//       : \"code yet to be deployed.\"} \n//   </div>\n// );\n;const CardFooter=_ref4=>{let{star_count,repo_url,pushed_at}=_ref4;}// const [updated_at, setUpdated_at] = useState(\"0 mints\");\n// const handleUpdatetime = useCallback(() => {\n//   const date = new Date(pushed_at);\n//   const nowdate = new Date();\n//   const diff = nowdate.getTime() - date.getTime();\n//   const hours = Math.trunc(diff / 1000 / 60 / 60);\n//   if (hours < 24) {\n//     if (hours < 1) return setUpdated_at(\"just now\");\n//     let measurement = hours === 1 ? \"hour\" : \"hours\";\n//     return setUpdated_at(`${hours.toString()} ${measurement} ago`);\n//   } else {\n//     const options = { day: \"numeric\", month: \"long\", year: \"numeric\" };\n//     const time = new Intl.DateTimeFormat(\"en-US\", options).format(date);\n//     return setUpdated_at(`on ${time}`);\n//   }\n// }, [pushed_at]);\n// useEffect(() => {\n//   handleUpdatetime();\n// }, [handleUpdatetime]);\n// return (\n//   <p className=\"card-text\">\n//      <a\n//       href={repo_url + \"/stargazers\"}\n//       target=\" _blank\"\n//       className=\"text-dark text-decoration-none\"\n//     >\n//       <span className=\"text-dark card-link mr-4\">\n//         <i className=\"fab fa-github\" /> Stars{\" \"}\n//         <span className=\"badge badge-dark\">{star_count}</span>\n//       </span>\n//     </a> \n//     {/* <small className=\"text-muted\">Updated {updated_at}</small> */}\n//   </p>\n// );\n;export default ProjectCard;","map":{"version":3,"names":["React","useState","useEffect","useCallback","Col","Card","Skeleton","axios","jsx","_jsx","jsxs","_jsxs","ProjectCard","_ref","value","name","description","svn_url","stargazers_count","languages_url","pushed_at","md","children","className","Body","Title","as","Text","count","CardButtons","_ref2","Language","_ref3","repo_url","CardFooter","_ref4","star_count"],"sources":["C:/Users/DineshkumarMurugados/Downloads/Code3Crafters-main/src/components/home/ProjectCard.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport Col from \"react-bootstrap/Col\";\nimport Card from \"react-bootstrap/Card\";\nimport Skeleton from \"react-loading-skeleton\";\nimport axios from \"axios\";\n\nconst ProjectCard = ({ value }) => {\n  const {\n    name,\n    description,\n    svn_url,\n    stargazers_count,\n    languages_url,\n    pushed_at,\n  } = value;\n\n  return (\n    <Col md={6}>\n      <Card className=\"card shadow-lg p-3 mb-5 bg-white rounded\">\n        <Card.Body>\n          <Card.Title as=\"h5\">{name || <Skeleton />} </Card.Title>\n          <Card.Text>{(!description) ? \"\" : description || <Skeleton count={3} />} </Card.Text>\n          {/* {svn_url ? <CardButtons svn_url={svn_url} /> : <Skeleton count={2} />}\n          <hr />\n          {languages_url ? (\n            <Language languages_url={languages_url} repo_url={svn_url} />\n          ) : (\n            <Skeleton count={3} />\n          )}\n          <CardFooter star_count={stargazers_count} pushed_at={pushed_at} /> */}\n        </Card.Body>\n      </Card>\n    </Col>\n  );\n};\n\nconst CardButtons = ({ svn_url }) => {\n  // return (\n  //   <div className=\"d-grid gap-2 d-md-block\">\n  //      <a\n  //       href={`${svn_url}/archive/master.zip`}\n  //       className=\"btn btn-outline-secondary mx-2\"\n  //     >\n  //       <i className=\"fab fa-github\" /> Clone Project\n  //     </a>\n  //     <a href={svn_url} target=\" _blank\" className=\"btn btn-outline-secondary mx-2\">\n  //       <i className=\"fab fa-github\" /> Repo\n  //     </a> \n  //   </div>\n  // );\n};\n\nconst Language = ({ languages_url, repo_url }) => {\n  // const [data, setData] = useState([]);\n\n  // const handleRequest = useCallback(async () => {\n  //   try {\n  //     const response = await axios.get(languages_url);\n  //     return setData(response.data);\n  //   } catch (error) {\n  //     console.error(error.message);\n  //   }\n  // }, [languages_url]);\n\n  // useEffect(() => {\n  //   handleRequest();\n  // }, [handleRequest]);\n\n  // const array = [];\n  // let total_count = 0;\n  // for (let index in data) {\n  //   array.push(index);\n  //   total_count += data[index];\n  // }\n\n  // return (\n  //   <div className=\"pb-3\">\n  //      Languages:{\" \"}\n  //     {array.length\n  //       ? array.map((language) => (\n  //         <a\n  //           key={language}\n  //           className=\"card-link\"\n  //           href={repo_url + `/search?l=${language}`}\n  //           target=\" _blank\"\n  //           rel=\"noopener noreferrer\"\n  //         >\n  //           <span className=\"badge bg-light text-dark\">\n  //             {language}:{\" \"}\n  //             {Math.trunc((data[language] / total_count) * 1000) / 10} %\n  //           </span>\n  //         </a>\n\n  //       ))\n  //       : \"code yet to be deployed.\"} \n  //   </div>\n  // );\n};\n\nconst CardFooter = ({ star_count, repo_url, pushed_at }) => {\n  // const [updated_at, setUpdated_at] = useState(\"0 mints\");\n\n  // const handleUpdatetime = useCallback(() => {\n  //   const date = new Date(pushed_at);\n  //   const nowdate = new Date();\n  //   const diff = nowdate.getTime() - date.getTime();\n  //   const hours = Math.trunc(diff / 1000 / 60 / 60);\n\n  //   if (hours < 24) {\n  //     if (hours < 1) return setUpdated_at(\"just now\");\n  //     let measurement = hours === 1 ? \"hour\" : \"hours\";\n  //     return setUpdated_at(`${hours.toString()} ${measurement} ago`);\n  //   } else {\n  //     const options = { day: \"numeric\", month: \"long\", year: \"numeric\" };\n  //     const time = new Intl.DateTimeFormat(\"en-US\", options).format(date);\n  //     return setUpdated_at(`on ${time}`);\n  //   }\n  // }, [pushed_at]);\n\n  // useEffect(() => {\n  //   handleUpdatetime();\n  // }, [handleUpdatetime]);\n\n  // return (\n  //   <p className=\"card-text\">\n  //      <a\n  //       href={repo_url + \"/stargazers\"}\n  //       target=\" _blank\"\n  //       className=\"text-dark text-decoration-none\"\n  //     >\n  //       <span className=\"text-dark card-link mr-4\">\n  //         <i className=\"fab fa-github\" /> Stars{\" \"}\n  //         <span className=\"badge badge-dark\">{star_count}</span>\n  //       </span>\n  //     </a> \n  //     {/* <small className=\"text-muted\">Updated {updated_at}</small> */}\n  //   </p>\n  // );\n};\n\nexport default ProjectCard;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,CAAEC,WAAW,KAAQ,OAAO,CAC/D,MAAO,CAAAC,GAAG,KAAM,qBAAqB,CACrC,MAAO,CAAAC,IAAI,KAAM,sBAAsB,CACvC,MAAO,CAAAC,QAAQ,KAAM,wBAAwB,CAC7C,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE1B,KAAM,CAAAC,WAAW,CAAGC,IAAA,EAAe,IAAd,CAAEC,KAAM,CAAC,CAAAD,IAAA,CAC5B,KAAM,CACJE,IAAI,CACJC,WAAW,CACXC,OAAO,CACPC,gBAAgB,CAChBC,aAAa,CACbC,SACF,CAAC,CAAGN,KAAK,CAET,mBACEL,IAAA,CAACL,GAAG,EAACiB,EAAE,CAAE,CAAE,CAAAC,QAAA,cACTb,IAAA,CAACJ,IAAI,EAACkB,SAAS,CAAC,0CAA0C,CAAAD,QAAA,cACxDX,KAAA,CAACN,IAAI,CAACmB,IAAI,EAAAF,QAAA,eACRX,KAAA,CAACN,IAAI,CAACoB,KAAK,EAACC,EAAE,CAAC,IAAI,CAAAJ,QAAA,EAAEP,IAAI,eAAIN,IAAA,CAACH,QAAQ,GAAE,CAAC,CAAC,GAAC,EAAY,CAAC,cACxDK,KAAA,CAACN,IAAI,CAACsB,IAAI,EAAAL,QAAA,EAAG,CAACN,WAAW,CAAI,EAAE,CAAGA,WAAW,eAAIP,IAAA,CAACH,QAAQ,EAACsB,KAAK,CAAE,CAAE,CAAE,CAAC,CAAC,GAAC,EAAW,CAAC,EAS5E,CAAC,CACR,CAAC,CACJ,CAAC,CAEV,CAAC,CAED,KAAM,CAAAC,WAAW,CAAGC,KAAA,EAAiB,IAAhB,CAAEb,OAAQ,CAAC,CAAAa,KAAA,CAchC,CAbE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CAED,KAAM,CAAAC,QAAQ,CAAGC,KAAA,EAAiC,IAAhC,CAAEb,aAAa,CAAEc,QAAS,CAAC,CAAAD,KAAA,CA6C7C,CA5CE;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACD,CAED,KAAM,CAAAE,UAAU,CAAGC,KAAA,EAAyC,IAAxC,CAAEC,UAAU,CAAEH,QAAQ,CAAEb,SAAU,CAAC,CAAAe,KAAA,CAuCvD,CAtCE;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CAED,cAAe,CAAAvB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}