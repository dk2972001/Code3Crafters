{"ast":null,"code":"import _defineProperty from \"C:/Users/kisho/OneDrive/Pictures/home/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { Keyframes, unit } from '@ant-design/cssinjs';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\nvar skeletonClsLoading = new Keyframes(\"ant-skeleton-loading\", {\n  '0%': {\n    backgroundPosition: '100% 50%'\n  },\n  '100%': {\n    backgroundPosition: '0 50%'\n  }\n});\nvar genSkeletonElementCommonSize = function genSkeletonElementCommonSize(size) {\n  return {\n    height: size,\n    lineHeight: unit(size)\n  };\n};\nvar genSkeletonElementAvatarSize = function genSkeletonElementAvatarSize(size) {\n  return Object.assign({\n    width: size\n  }, genSkeletonElementCommonSize(size));\n};\nvar genSkeletonColor = function genSkeletonColor(token) {\n  return {\n    background: token.skeletonLoadingBackground,\n    backgroundSize: '400% 100%',\n    animationName: skeletonClsLoading,\n    animationDuration: token.skeletonLoadingMotionDuration,\n    animationTimingFunction: 'ease',\n    animationIterationCount: 'infinite'\n  };\n};\nvar genSkeletonElementInputSize = function genSkeletonElementInputSize(size, calc) {\n  return Object.assign({\n    width: calc(size).mul(5).equal(),\n    minWidth: calc(size).mul(5).equal()\n  }, genSkeletonElementCommonSize(size));\n};\nvar genSkeletonElementAvatar = function genSkeletonElementAvatar(token) {\n  var _ref;\n  var skeletonAvatarCls = token.skeletonAvatarCls,\n    gradientFromColor = token.gradientFromColor,\n    controlHeight = token.controlHeight,\n    controlHeightLG = token.controlHeightLG,\n    controlHeightSM = token.controlHeightSM;\n  return _ref = {}, _defineProperty(_ref, \"\".concat(skeletonAvatarCls), Object.assign({\n    display: 'inline-block',\n    verticalAlign: 'top',\n    background: gradientFromColor\n  }, genSkeletonElementAvatarSize(controlHeight))), _defineProperty(_ref, \"\".concat(skeletonAvatarCls).concat(skeletonAvatarCls, \"-circle\"), {\n    borderRadius: '50%'\n  }), _defineProperty(_ref, \"\".concat(skeletonAvatarCls).concat(skeletonAvatarCls, \"-lg\"), Object.assign({}, genSkeletonElementAvatarSize(controlHeightLG))), _defineProperty(_ref, \"\".concat(skeletonAvatarCls).concat(skeletonAvatarCls, \"-sm\"), Object.assign({}, genSkeletonElementAvatarSize(controlHeightSM))), _ref;\n};\nvar genSkeletonElementInput = function genSkeletonElementInput(token) {\n  var _ref2;\n  var controlHeight = token.controlHeight,\n    borderRadiusSM = token.borderRadiusSM,\n    skeletonInputCls = token.skeletonInputCls,\n    controlHeightLG = token.controlHeightLG,\n    controlHeightSM = token.controlHeightSM,\n    gradientFromColor = token.gradientFromColor,\n    calc = token.calc;\n  return _ref2 = {}, _defineProperty(_ref2, \"\".concat(skeletonInputCls), Object.assign({\n    display: 'inline-block',\n    verticalAlign: 'top',\n    background: gradientFromColor,\n    borderRadius: borderRadiusSM\n  }, genSkeletonElementInputSize(controlHeight, calc))), _defineProperty(_ref2, \"\".concat(skeletonInputCls, \"-lg\"), Object.assign({}, genSkeletonElementInputSize(controlHeightLG, calc))), _defineProperty(_ref2, \"\".concat(skeletonInputCls, \"-sm\"), Object.assign({}, genSkeletonElementInputSize(controlHeightSM, calc))), _ref2;\n};\nvar genSkeletonElementImageSize = function genSkeletonElementImageSize(size) {\n  return Object.assign({\n    width: size\n  }, genSkeletonElementCommonSize(size));\n};\nvar genSkeletonElementImage = function genSkeletonElementImage(token) {\n  var _Object$assign, _ref3;\n  var skeletonImageCls = token.skeletonImageCls,\n    imageSizeBase = token.imageSizeBase,\n    gradientFromColor = token.gradientFromColor,\n    borderRadiusSM = token.borderRadiusSM,\n    calc = token.calc;\n  return _ref3 = {}, _defineProperty(_ref3, \"\".concat(skeletonImageCls), Object.assign(Object.assign({\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    verticalAlign: 'top',\n    background: gradientFromColor,\n    borderRadius: borderRadiusSM\n  }, genSkeletonElementImageSize(calc(imageSizeBase).mul(2).equal())), (_Object$assign = {}, _defineProperty(_Object$assign, \"\".concat(skeletonImageCls, \"-path\"), {\n    fill: '#bfbfbf'\n  }), _defineProperty(_Object$assign, \"\".concat(skeletonImageCls, \"-svg\"), Object.assign(Object.assign({}, genSkeletonElementImageSize(imageSizeBase)), {\n    maxWidth: calc(imageSizeBase).mul(4).equal(),\n    maxHeight: calc(imageSizeBase).mul(4).equal()\n  })), _defineProperty(_Object$assign, \"\".concat(skeletonImageCls, \"-svg\").concat(skeletonImageCls, \"-svg-circle\"), {\n    borderRadius: '50%'\n  }), _Object$assign))), _defineProperty(_ref3, \"\".concat(skeletonImageCls).concat(skeletonImageCls, \"-circle\"), {\n    borderRadius: '50%'\n  }), _ref3;\n};\nvar genSkeletonElementButtonShape = function genSkeletonElementButtonShape(token, size, buttonCls) {\n  var _ref4;\n  var skeletonButtonCls = token.skeletonButtonCls;\n  return _ref4 = {}, _defineProperty(_ref4, \"\".concat(buttonCls).concat(skeletonButtonCls, \"-circle\"), {\n    width: size,\n    minWidth: size,\n    borderRadius: '50%'\n  }), _defineProperty(_ref4, \"\".concat(buttonCls).concat(skeletonButtonCls, \"-round\"), {\n    borderRadius: size\n  }), _ref4;\n};\nvar genSkeletonElementButtonSize = function genSkeletonElementButtonSize(size, calc) {\n  return Object.assign({\n    width: calc(size).mul(2).equal(),\n    minWidth: calc(size).mul(2).equal()\n  }, genSkeletonElementCommonSize(size));\n};\nvar genSkeletonElementButton = function genSkeletonElementButton(token) {\n  var borderRadiusSM = token.borderRadiusSM,\n    skeletonButtonCls = token.skeletonButtonCls,\n    controlHeight = token.controlHeight,\n    controlHeightLG = token.controlHeightLG,\n    controlHeightSM = token.controlHeightSM,\n    gradientFromColor = token.gradientFromColor,\n    calc = token.calc;\n  return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(_defineProperty({}, \"\".concat(skeletonButtonCls), Object.assign({\n    display: 'inline-block',\n    verticalAlign: 'top',\n    background: gradientFromColor,\n    borderRadius: borderRadiusSM,\n    width: calc(controlHeight).mul(2).equal(),\n    minWidth: calc(controlHeight).mul(2).equal()\n  }, genSkeletonElementButtonSize(controlHeight, calc))), genSkeletonElementButtonShape(token, controlHeight, skeletonButtonCls)), _defineProperty({}, \"\".concat(skeletonButtonCls, \"-lg\"), Object.assign({}, genSkeletonElementButtonSize(controlHeightLG, calc)))), genSkeletonElementButtonShape(token, controlHeightLG, \"\".concat(skeletonButtonCls, \"-lg\"))), _defineProperty({}, \"\".concat(skeletonButtonCls, \"-sm\"), Object.assign({}, genSkeletonElementButtonSize(controlHeightSM, calc)))), genSkeletonElementButtonShape(token, controlHeightSM, \"\".concat(skeletonButtonCls, \"-sm\")));\n};\n// =============================== Base ===============================\nvar genBaseStyle = function genBaseStyle(token) {\n  var _$concat, _$concat3, _$concat4, _$concat$concat2, _ref5;\n  var componentCls = token.componentCls,\n    skeletonAvatarCls = token.skeletonAvatarCls,\n    skeletonTitleCls = token.skeletonTitleCls,\n    skeletonParagraphCls = token.skeletonParagraphCls,\n    skeletonButtonCls = token.skeletonButtonCls,\n    skeletonInputCls = token.skeletonInputCls,\n    skeletonImageCls = token.skeletonImageCls,\n    controlHeight = token.controlHeight,\n    controlHeightLG = token.controlHeightLG,\n    controlHeightSM = token.controlHeightSM,\n    gradientFromColor = token.gradientFromColor,\n    padding = token.padding,\n    marginSM = token.marginSM,\n    borderRadius = token.borderRadius,\n    titleHeight = token.titleHeight,\n    blockRadius = token.blockRadius,\n    paragraphLiHeight = token.paragraphLiHeight,\n    controlHeightXS = token.controlHeightXS,\n    paragraphMarginTop = token.paragraphMarginTop;\n  return _ref5 = {}, _defineProperty(_ref5, \"\".concat(componentCls), (_$concat4 = {\n    display: 'table',\n    width: '100%'\n  }, _defineProperty(_$concat4, \"\".concat(componentCls, \"-header\"), (_$concat = {\n    display: 'table-cell',\n    paddingInlineEnd: padding,\n    verticalAlign: 'top'\n  }, _defineProperty(_$concat, \"\".concat(skeletonAvatarCls), Object.assign({\n    display: 'inline-block',\n    verticalAlign: 'top',\n    background: gradientFromColor\n  }, genSkeletonElementAvatarSize(controlHeight))), _defineProperty(_$concat, \"\".concat(skeletonAvatarCls, \"-circle\"), {\n    borderRadius: '50%'\n  }), _defineProperty(_$concat, \"\".concat(skeletonAvatarCls, \"-lg\"), Object.assign({}, genSkeletonElementAvatarSize(controlHeightLG))), _defineProperty(_$concat, \"\".concat(skeletonAvatarCls, \"-sm\"), Object.assign({}, genSkeletonElementAvatarSize(controlHeightSM))), _$concat)), _defineProperty(_$concat4, \"\".concat(componentCls, \"-content\"), (_$concat3 = {\n    display: 'table-cell',\n    width: '100%',\n    verticalAlign: 'top'\n  }, _defineProperty(_$concat3, \"\".concat(skeletonTitleCls), _defineProperty({\n    width: '100%',\n    height: titleHeight,\n    background: gradientFromColor,\n    borderRadius: blockRadius\n  }, \"+ \".concat(skeletonParagraphCls), {\n    marginBlockStart: controlHeightSM\n  })), _defineProperty(_$concat3, \"\".concat(skeletonParagraphCls), {\n    padding: 0,\n    '> li': {\n      width: '100%',\n      height: paragraphLiHeight,\n      listStyle: 'none',\n      background: gradientFromColor,\n      borderRadius: blockRadius,\n      '+ li': {\n        marginBlockStart: controlHeightXS\n      }\n    }\n  }), _defineProperty(_$concat3, \"\".concat(skeletonParagraphCls, \"> li:last-child:not(:first-child):not(:nth-child(2))\"), {\n    width: '61%'\n  }), _$concat3)), _defineProperty(_$concat4, \"&-round \".concat(componentCls, \"-content\"), _defineProperty({}, \"\".concat(skeletonTitleCls, \", \").concat(skeletonParagraphCls, \" > li\"), {\n    borderRadius: borderRadius\n  })), _$concat4)), _defineProperty(_ref5, \"\".concat(componentCls, \"-with-avatar \").concat(componentCls, \"-content\"), _defineProperty({}, \"\".concat(skeletonTitleCls), _defineProperty({\n    marginBlockStart: marginSM\n  }, \"+ \".concat(skeletonParagraphCls), {\n    marginBlockStart: paragraphMarginTop\n  }))), _defineProperty(_ref5, \"\".concat(componentCls).concat(componentCls, \"-element\"), Object.assign(Object.assign(Object.assign(Object.assign({\n    display: 'inline-block',\n    width: 'auto'\n  }, genSkeletonElementButton(token)), genSkeletonElementAvatar(token)), genSkeletonElementInput(token)), genSkeletonElementImage(token))), _defineProperty(_ref5, \"\".concat(componentCls).concat(componentCls, \"-block\"), (_$concat$concat2 = {\n    width: '100%'\n  }, _defineProperty(_$concat$concat2, \"\".concat(skeletonButtonCls), {\n    width: '100%'\n  }), _defineProperty(_$concat$concat2, \"\".concat(skeletonInputCls), {\n    width: '100%'\n  }), _$concat$concat2)), _defineProperty(_ref5, \"\".concat(componentCls).concat(componentCls, \"-active\"), _defineProperty({}, \"\\n        \".concat(skeletonTitleCls, \",\\n        \").concat(skeletonParagraphCls, \" > li,\\n        \").concat(skeletonAvatarCls, \",\\n        \").concat(skeletonButtonCls, \",\\n        \").concat(skeletonInputCls, \",\\n        \").concat(skeletonImageCls, \"\\n      \"), Object.assign({}, genSkeletonColor(token)))), _ref5;\n};\n// ============================== Export ==============================\nexport var prepareComponentToken = function prepareComponentToken(token) {\n  var colorFillContent = token.colorFillContent,\n    colorFill = token.colorFill;\n  var gradientFromColor = colorFillContent;\n  var gradientToColor = colorFill;\n  return {\n    color: gradientFromColor,\n    colorGradientEnd: gradientToColor,\n    gradientFromColor: gradientFromColor,\n    gradientToColor: gradientToColor,\n    titleHeight: token.controlHeight / 2,\n    blockRadius: token.borderRadiusSM,\n    paragraphMarginTop: token.marginLG + token.marginXXS,\n    paragraphLiHeight: token.controlHeight / 2\n  };\n};\nexport default genStyleHooks('Skeleton', function (token) {\n  var componentCls = token.componentCls,\n    calc = token.calc;\n  var skeletonToken = mergeToken(token, {\n    skeletonAvatarCls: \"\".concat(componentCls, \"-avatar\"),\n    skeletonTitleCls: \"\".concat(componentCls, \"-title\"),\n    skeletonParagraphCls: \"\".concat(componentCls, \"-paragraph\"),\n    skeletonButtonCls: \"\".concat(componentCls, \"-button\"),\n    skeletonInputCls: \"\".concat(componentCls, \"-input\"),\n    skeletonImageCls: \"\".concat(componentCls, \"-image\"),\n    imageSizeBase: calc(token.controlHeight).mul(1.5).equal(),\n    borderRadius: 100,\n    // Large number to make capsule shape\n    skeletonLoadingBackground: \"linear-gradient(90deg, \".concat(token.gradientFromColor, \" 25%, \").concat(token.gradientToColor, \" 37%, \").concat(token.gradientFromColor, \" 63%)\"),\n    skeletonLoadingMotionDuration: '1.4s'\n  });\n  return [genBaseStyle(skeletonToken)];\n}, prepareComponentToken, {\n  deprecatedTokens: [['color', 'gradientFromColor'], ['colorGradientEnd', 'gradientToColor']]\n});","map":{"version":3,"names":["Keyframes","unit","genStyleHooks","mergeToken","skeletonClsLoading","backgroundPosition","genSkeletonElementCommonSize","size","height","lineHeight","genSkeletonElementAvatarSize","Object","assign","width","genSkeletonColor","token","background","skeletonLoadingBackground","backgroundSize","animationName","animationDuration","skeletonLoadingMotionDuration","animationTimingFunction","animationIterationCount","genSkeletonElementInputSize","calc","mul","equal","minWidth","genSkeletonElementAvatar","_ref","skeletonAvatarCls","gradientFromColor","controlHeight","controlHeightLG","controlHeightSM","_defineProperty","concat","display","verticalAlign","borderRadius","genSkeletonElementInput","_ref2","borderRadiusSM","skeletonInputCls","genSkeletonElementImageSize","genSkeletonElementImage","_Object$assign","_ref3","skeletonImageCls","imageSizeBase","alignItems","justifyContent","fill","maxWidth","maxHeight","genSkeletonElementButtonShape","buttonCls","_ref4","skeletonButtonCls","genSkeletonElementButtonSize","genSkeletonElementButton","genBaseStyle","_$concat","_$concat3","_$concat4","_$concat$concat2","_ref5","componentCls","skeletonTitleCls","skeletonParagraphCls","padding","marginSM","titleHeight","blockRadius","paragraphLiHeight","controlHeightXS","paragraphMarginTop","paddingInlineEnd","marginBlockStart","listStyle","prepareComponentToken","colorFillContent","colorFill","gradientToColor","color","colorGradientEnd","marginLG","marginXXS","skeletonToken","deprecatedTokens"],"sources":["C:/Users/kisho/OneDrive/Pictures/home/node_modules/antd/es/skeleton/style/index.js"],"sourcesContent":["import { Keyframes, unit } from '@ant-design/cssinjs';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\nconst skeletonClsLoading = new Keyframes(`ant-skeleton-loading`, {\n  '0%': {\n    backgroundPosition: '100% 50%'\n  },\n  '100%': {\n    backgroundPosition: '0 50%'\n  }\n});\nconst genSkeletonElementCommonSize = size => ({\n  height: size,\n  lineHeight: unit(size)\n});\nconst genSkeletonElementAvatarSize = size => Object.assign({\n  width: size\n}, genSkeletonElementCommonSize(size));\nconst genSkeletonColor = token => ({\n  background: token.skeletonLoadingBackground,\n  backgroundSize: '400% 100%',\n  animationName: skeletonClsLoading,\n  animationDuration: token.skeletonLoadingMotionDuration,\n  animationTimingFunction: 'ease',\n  animationIterationCount: 'infinite'\n});\nconst genSkeletonElementInputSize = (size, calc) => Object.assign({\n  width: calc(size).mul(5).equal(),\n  minWidth: calc(size).mul(5).equal()\n}, genSkeletonElementCommonSize(size));\nconst genSkeletonElementAvatar = token => {\n  const {\n    skeletonAvatarCls,\n    gradientFromColor,\n    controlHeight,\n    controlHeightLG,\n    controlHeightSM\n  } = token;\n  return {\n    [`${skeletonAvatarCls}`]: Object.assign({\n      display: 'inline-block',\n      verticalAlign: 'top',\n      background: gradientFromColor\n    }, genSkeletonElementAvatarSize(controlHeight)),\n    [`${skeletonAvatarCls}${skeletonAvatarCls}-circle`]: {\n      borderRadius: '50%'\n    },\n    [`${skeletonAvatarCls}${skeletonAvatarCls}-lg`]: Object.assign({}, genSkeletonElementAvatarSize(controlHeightLG)),\n    [`${skeletonAvatarCls}${skeletonAvatarCls}-sm`]: Object.assign({}, genSkeletonElementAvatarSize(controlHeightSM))\n  };\n};\nconst genSkeletonElementInput = token => {\n  const {\n    controlHeight,\n    borderRadiusSM,\n    skeletonInputCls,\n    controlHeightLG,\n    controlHeightSM,\n    gradientFromColor,\n    calc\n  } = token;\n  return {\n    [`${skeletonInputCls}`]: Object.assign({\n      display: 'inline-block',\n      verticalAlign: 'top',\n      background: gradientFromColor,\n      borderRadius: borderRadiusSM\n    }, genSkeletonElementInputSize(controlHeight, calc)),\n    [`${skeletonInputCls}-lg`]: Object.assign({}, genSkeletonElementInputSize(controlHeightLG, calc)),\n    [`${skeletonInputCls}-sm`]: Object.assign({}, genSkeletonElementInputSize(controlHeightSM, calc))\n  };\n};\nconst genSkeletonElementImageSize = size => Object.assign({\n  width: size\n}, genSkeletonElementCommonSize(size));\nconst genSkeletonElementImage = token => {\n  const {\n    skeletonImageCls,\n    imageSizeBase,\n    gradientFromColor,\n    borderRadiusSM,\n    calc\n  } = token;\n  return {\n    [`${skeletonImageCls}`]: Object.assign(Object.assign({\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      verticalAlign: 'top',\n      background: gradientFromColor,\n      borderRadius: borderRadiusSM\n    }, genSkeletonElementImageSize(calc(imageSizeBase).mul(2).equal())), {\n      [`${skeletonImageCls}-path`]: {\n        fill: '#bfbfbf'\n      },\n      [`${skeletonImageCls}-svg`]: Object.assign(Object.assign({}, genSkeletonElementImageSize(imageSizeBase)), {\n        maxWidth: calc(imageSizeBase).mul(4).equal(),\n        maxHeight: calc(imageSizeBase).mul(4).equal()\n      }),\n      [`${skeletonImageCls}-svg${skeletonImageCls}-svg-circle`]: {\n        borderRadius: '50%'\n      }\n    }),\n    [`${skeletonImageCls}${skeletonImageCls}-circle`]: {\n      borderRadius: '50%'\n    }\n  };\n};\nconst genSkeletonElementButtonShape = (token, size, buttonCls) => {\n  const {\n    skeletonButtonCls\n  } = token;\n  return {\n    [`${buttonCls}${skeletonButtonCls}-circle`]: {\n      width: size,\n      minWidth: size,\n      borderRadius: '50%'\n    },\n    [`${buttonCls}${skeletonButtonCls}-round`]: {\n      borderRadius: size\n    }\n  };\n};\nconst genSkeletonElementButtonSize = (size, calc) => Object.assign({\n  width: calc(size).mul(2).equal(),\n  minWidth: calc(size).mul(2).equal()\n}, genSkeletonElementCommonSize(size));\nconst genSkeletonElementButton = token => {\n  const {\n    borderRadiusSM,\n    skeletonButtonCls,\n    controlHeight,\n    controlHeightLG,\n    controlHeightSM,\n    gradientFromColor,\n    calc\n  } = token;\n  return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({\n    [`${skeletonButtonCls}`]: Object.assign({\n      display: 'inline-block',\n      verticalAlign: 'top',\n      background: gradientFromColor,\n      borderRadius: borderRadiusSM,\n      width: calc(controlHeight).mul(2).equal(),\n      minWidth: calc(controlHeight).mul(2).equal()\n    }, genSkeletonElementButtonSize(controlHeight, calc))\n  }, genSkeletonElementButtonShape(token, controlHeight, skeletonButtonCls)), {\n    [`${skeletonButtonCls}-lg`]: Object.assign({}, genSkeletonElementButtonSize(controlHeightLG, calc))\n  }), genSkeletonElementButtonShape(token, controlHeightLG, `${skeletonButtonCls}-lg`)), {\n    [`${skeletonButtonCls}-sm`]: Object.assign({}, genSkeletonElementButtonSize(controlHeightSM, calc))\n  }), genSkeletonElementButtonShape(token, controlHeightSM, `${skeletonButtonCls}-sm`));\n};\n// =============================== Base ===============================\nconst genBaseStyle = token => {\n  const {\n    componentCls,\n    skeletonAvatarCls,\n    skeletonTitleCls,\n    skeletonParagraphCls,\n    skeletonButtonCls,\n    skeletonInputCls,\n    skeletonImageCls,\n    controlHeight,\n    controlHeightLG,\n    controlHeightSM,\n    gradientFromColor,\n    padding,\n    marginSM,\n    borderRadius,\n    titleHeight,\n    blockRadius,\n    paragraphLiHeight,\n    controlHeightXS,\n    paragraphMarginTop\n  } = token;\n  return {\n    [`${componentCls}`]: {\n      display: 'table',\n      width: '100%',\n      [`${componentCls}-header`]: {\n        display: 'table-cell',\n        paddingInlineEnd: padding,\n        verticalAlign: 'top',\n        // Avatar\n        [`${skeletonAvatarCls}`]: Object.assign({\n          display: 'inline-block',\n          verticalAlign: 'top',\n          background: gradientFromColor\n        }, genSkeletonElementAvatarSize(controlHeight)),\n        [`${skeletonAvatarCls}-circle`]: {\n          borderRadius: '50%'\n        },\n        [`${skeletonAvatarCls}-lg`]: Object.assign({}, genSkeletonElementAvatarSize(controlHeightLG)),\n        [`${skeletonAvatarCls}-sm`]: Object.assign({}, genSkeletonElementAvatarSize(controlHeightSM))\n      },\n      [`${componentCls}-content`]: {\n        display: 'table-cell',\n        width: '100%',\n        verticalAlign: 'top',\n        // Title\n        [`${skeletonTitleCls}`]: {\n          width: '100%',\n          height: titleHeight,\n          background: gradientFromColor,\n          borderRadius: blockRadius,\n          [`+ ${skeletonParagraphCls}`]: {\n            marginBlockStart: controlHeightSM\n          }\n        },\n        // paragraph\n        [`${skeletonParagraphCls}`]: {\n          padding: 0,\n          '> li': {\n            width: '100%',\n            height: paragraphLiHeight,\n            listStyle: 'none',\n            background: gradientFromColor,\n            borderRadius: blockRadius,\n            '+ li': {\n              marginBlockStart: controlHeightXS\n            }\n          }\n        },\n        [`${skeletonParagraphCls}> li:last-child:not(:first-child):not(:nth-child(2))`]: {\n          width: '61%'\n        }\n      },\n      [`&-round ${componentCls}-content`]: {\n        [`${skeletonTitleCls}, ${skeletonParagraphCls} > li`]: {\n          borderRadius\n        }\n      }\n    },\n    [`${componentCls}-with-avatar ${componentCls}-content`]: {\n      // Title\n      [`${skeletonTitleCls}`]: {\n        marginBlockStart: marginSM,\n        [`+ ${skeletonParagraphCls}`]: {\n          marginBlockStart: paragraphMarginTop\n        }\n      }\n    },\n    // Skeleton element\n    [`${componentCls}${componentCls}-element`]: Object.assign(Object.assign(Object.assign(Object.assign({\n      display: 'inline-block',\n      width: 'auto'\n    }, genSkeletonElementButton(token)), genSkeletonElementAvatar(token)), genSkeletonElementInput(token)), genSkeletonElementImage(token)),\n    // Skeleton Block Button, Input\n    [`${componentCls}${componentCls}-block`]: {\n      width: '100%',\n      [`${skeletonButtonCls}`]: {\n        width: '100%'\n      },\n      [`${skeletonInputCls}`]: {\n        width: '100%'\n      }\n    },\n    // With active animation\n    [`${componentCls}${componentCls}-active`]: {\n      [`\n        ${skeletonTitleCls},\n        ${skeletonParagraphCls} > li,\n        ${skeletonAvatarCls},\n        ${skeletonButtonCls},\n        ${skeletonInputCls},\n        ${skeletonImageCls}\n      `]: Object.assign({}, genSkeletonColor(token))\n    }\n  };\n};\n// ============================== Export ==============================\nexport const prepareComponentToken = token => {\n  const {\n    colorFillContent,\n    colorFill\n  } = token;\n  const gradientFromColor = colorFillContent;\n  const gradientToColor = colorFill;\n  return {\n    color: gradientFromColor,\n    colorGradientEnd: gradientToColor,\n    gradientFromColor,\n    gradientToColor,\n    titleHeight: token.controlHeight / 2,\n    blockRadius: token.borderRadiusSM,\n    paragraphMarginTop: token.marginLG + token.marginXXS,\n    paragraphLiHeight: token.controlHeight / 2\n  };\n};\nexport default genStyleHooks('Skeleton', token => {\n  const {\n    componentCls,\n    calc\n  } = token;\n  const skeletonToken = mergeToken(token, {\n    skeletonAvatarCls: `${componentCls}-avatar`,\n    skeletonTitleCls: `${componentCls}-title`,\n    skeletonParagraphCls: `${componentCls}-paragraph`,\n    skeletonButtonCls: `${componentCls}-button`,\n    skeletonInputCls: `${componentCls}-input`,\n    skeletonImageCls: `${componentCls}-image`,\n    imageSizeBase: calc(token.controlHeight).mul(1.5).equal(),\n    borderRadius: 100,\n    // Large number to make capsule shape\n    skeletonLoadingBackground: `linear-gradient(90deg, ${token.gradientFromColor} 25%, ${token.gradientToColor} 37%, ${token.gradientFromColor} 63%)`,\n    skeletonLoadingMotionDuration: '1.4s'\n  });\n  return [genBaseStyle(skeletonToken)];\n}, prepareComponentToken, {\n  deprecatedTokens: [['color', 'gradientFromColor'], ['colorGradientEnd', 'gradientToColor']]\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}