{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kisho\\\\OneDrive\\\\Desktop\\\\home\\\\src\\\\components\\\\home\\\\ContactForm\\\\ContactForm.jsx\",\n  _s = $RefreshSig$();\nimport { Button, Form, Input } from \"antd\";\n//import emailjs from 'emailjs-com';\n\nimport React, { useState } from 'react';\nimport emailjs from '@emailjs/browser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmailForm = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState('');\n  const [message, setMessage] = useState('');\n  const onFinish = values => {\n    // Your EmailJS service ID, template ID, and Public Key\n    const serviceId = 'service_o9airgw';\n    const templateId = 'template_y517hvw';\n    const publicKey = 'vMLFO9hxLRqh92bFz';\n\n    // Create a new object that contains dynamic template params\n    const templateParams = {\n      from_name: values.name,\n      from_email: values.email,\n      from_phone: values.phone,\n      to_name: 'Web Wizard',\n      message: values.message\n    };\n\n    // Send the email using EmailJS\n    emailjs.send(serviceId, templateId, templateParams, publicKey).then(response => {\n      console.log('Email sent successfully!', response);\n    }).catch(error => {\n      console.error('Error sending email:', error);\n    });\n  };\n  const onFinishFailed = errorInfo => {\n    console.log(\"Failed:\", errorInfo);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex flex-column align-items-center\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      className: \"w-50\",\n      name: \"basic\",\n      labelCol: {\n        span: 8\n      },\n      wrapperCol: {\n        span: 16\n      },\n      style: {\n        maxWidth: 600\n      },\n      initialValues: {\n        remember: true\n      },\n      onFinish: onFinish,\n      onFinishFailed: onFinishFailed,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Name\",\n        name: \"name\",\n        rules: [{\n          required: true,\n          message: \"Please type your name!\"\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"email\",\n        label: \"Email\",\n        rules: [{\n          type: 'email',\n          required: true,\n          message: 'Please enter a valid email!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"phone\",\n        label: \"Phone Number\",\n        rules: [{\n          required: true,\n          message: \"Please type your number!\"\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          type: \"number\",\n          value: phone,\n          onChange: e => setPhone(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"message\",\n        label: \"Message\",\n        rules: [{\n          required: true,\n          message: \"Please enter your message!\"\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input.TextArea, {\n          value: message,\n          onChange: e => setMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        wrapperCol: {\n          offset: 8,\n          span: 16\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(EmailForm, \"IcDWMOeLf8M/k2s4y1b4fcCdey8=\");\n_c = EmailForm;\nexport default EmailForm;\nvar _c;\n$RefreshReg$(_c, \"EmailForm\");","map":{"version":3,"names":["Button","Form","Input","React","useState","emailjs","jsxDEV","_jsxDEV","EmailForm","_s","name","setName","email","setEmail","phone","setPhone","message","setMessage","onFinish","values","serviceId","templateId","publicKey","templateParams","from_name","from_email","from_phone","to_name","send","then","response","console","log","catch","error","onFinishFailed","errorInfo","className","children","labelCol","span","wrapperCol","style","maxWidth","initialValues","remember","autoComplete","Item","label","rules","required","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","type","TextArea","offset","htmlType","_c","$RefreshReg$"],"sources":["C:/Users/kisho/OneDrive/Desktop/home/src/components/home/ContactForm/ContactForm.jsx"],"sourcesContent":["import { Button, Form, Input } from \"antd\";\r\n//import emailjs from 'emailjs-com';\r\n\r\nimport React, { useState } from 'react'\r\n\r\nimport emailjs from '@emailjs/browser';\r\n\r\nconst EmailForm = () => {\r\n\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const onFinish = (values) => {\r\n    // Your EmailJS service ID, template ID, and Public Key\r\n    const serviceId = 'service_o9airgw';\r\n    const templateId = 'template_y517hvw';\r\n    const publicKey = 'vMLFO9hxLRqh92bFz';\r\n\r\n    // Create a new object that contains dynamic template params\r\n    const templateParams = {\r\n      from_name: values.name,\r\n      from_email: values.email,\r\n      from_phone: values.phone,\r\n      to_name: 'Web Wizard',\r\n      message: values.message,\r\n    };\r\n\r\n    // Send the email using EmailJS\r\n    emailjs.send(serviceId, templateId, templateParams, publicKey)\r\n      .then((response) => {\r\n        console.log('Email sent successfully!', response);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error sending email:', error);\r\n      });\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-flex flex-column align-items-center\">\r\n      <Form\r\n        className=\"w-50\"\r\n        name=\"basic\"\r\n        labelCol={{\r\n          span: 8,\r\n        }}\r\n        wrapperCol={{\r\n          span: 16,\r\n        }}\r\n        style={{\r\n          maxWidth: 600,\r\n        }}\r\n        initialValues={{\r\n          remember: true,\r\n        }}\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n        autoComplete=\"off\"\r\n      >\r\n        <Form.Item\r\n          label=\"Name\"\r\n          name=\"name\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please type your name!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input value={name} onChange={(e) => setName(e.target.value)} />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"email\"\r\n          label=\"Email\"\r\n          rules={[\r\n            {\r\n              type: 'email',\r\n              required: true,\r\n              message: 'Please enter a valid email!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input value={email} onChange={(e) => setEmail(e.target.value)} />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"phone\"\r\n          label=\"Phone Number\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please type your number!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input type=\"number\" value={phone} onChange={(e) => setPhone(e.target.value)} />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"message\"\r\n          label=\"Message\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please enter your message!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input.TextArea value={message} onChange={(e) => setMessage(e.target.value)} />\r\n        </Form.Item>\r\n        <Form.Item\r\n          wrapperCol={{\r\n            offset: 8,\r\n            span: 16,\r\n          }}\r\n        >\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmailForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}