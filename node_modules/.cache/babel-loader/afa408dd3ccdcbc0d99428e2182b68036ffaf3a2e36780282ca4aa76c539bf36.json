{"ast":null,"code":"\"use client\";\n\nimport _slicedToArray from \"C:/Users/kisho/OneDrive/Pictures/home/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport React, { useContext } from 'react';\nimport { render } from \"rc-util/es/React/render\";\nimport { AppConfigContext } from '../app/context';\nimport ConfigProvider, { ConfigContext, globalConfig, warnContext } from '../config-provider';\nimport PurePanel from './PurePanel';\nimport useNotification, { useInternalNotification } from './useNotification';\nvar notification = null;\nvar act = function act(callback) {\n  return callback();\n};\nvar taskQueue = [];\nvar defaultGlobalConfig = {};\nfunction getGlobalContext() {\n  var _defaultGlobalConfig = defaultGlobalConfig,\n    getContainer = _defaultGlobalConfig.getContainer,\n    rtl = _defaultGlobalConfig.rtl,\n    maxCount = _defaultGlobalConfig.maxCount,\n    top = _defaultGlobalConfig.top,\n    bottom = _defaultGlobalConfig.bottom;\n  var mergedContainer = (getContainer === null || getContainer === void 0 ? void 0 : getContainer()) || document.body;\n  return {\n    getContainer: function getContainer() {\n      return mergedContainer;\n    },\n    rtl: rtl,\n    maxCount: maxCount,\n    top: top,\n    bottom: bottom\n  };\n}\nvar GlobalHolder = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var notificationConfig = props.notificationConfig,\n    sync = props.sync;\n  var _useContext = useContext(ConfigContext),\n    getPrefixCls = _useContext.getPrefixCls;\n  var prefixCls = defaultGlobalConfig.prefixCls || getPrefixCls('notification');\n  var appConfig = useContext(AppConfigContext);\n  var _useInternalNotificat = useInternalNotification(Object.assign(Object.assign(Object.assign({}, notificationConfig), {\n      prefixCls: prefixCls\n    }), appConfig.notification)),\n    _useInternalNotificat2 = _slicedToArray(_useInternalNotificat, 2),\n    api = _useInternalNotificat2[0],\n    holder = _useInternalNotificat2[1];\n  React.useEffect(sync, []);\n  React.useImperativeHandle(ref, function () {\n    var instance = Object.assign({}, api);\n    Object.keys(instance).forEach(function (method) {\n      instance[method] = function () {\n        sync();\n        return api[method].apply(api, arguments);\n      };\n    });\n    return {\n      instance: instance,\n      sync: sync\n    };\n  });\n  return holder;\n});\nvar GlobalHolderWrapper = /*#__PURE__*/React.forwardRef(function (_, ref) {\n  var _React$useState = React.useState(getGlobalContext),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    notificationConfig = _React$useState2[0],\n    setNotificationConfig = _React$useState2[1];\n  var sync = function sync() {\n    setNotificationConfig(getGlobalContext);\n  };\n  React.useEffect(sync, []);\n  var global = globalConfig();\n  var rootPrefixCls = global.getRootPrefixCls();\n  var rootIconPrefixCls = global.getIconPrefixCls();\n  var theme = global.getTheme();\n  var dom = /*#__PURE__*/React.createElement(GlobalHolder, {\n    ref: ref,\n    sync: sync,\n    notificationConfig: notificationConfig\n  });\n  return /*#__PURE__*/React.createElement(ConfigProvider, {\n    prefixCls: rootPrefixCls,\n    iconPrefixCls: rootIconPrefixCls,\n    theme: theme\n  }, global.holderRender ? global.holderRender(dom) : dom);\n});\nfunction flushNotice() {\n  if (!notification) {\n    var holderFragment = document.createDocumentFragment();\n    var newNotification = {\n      fragment: holderFragment\n    };\n    notification = newNotification;\n    // Delay render to avoid sync issue\n    act(function () {\n      render( /*#__PURE__*/React.createElement(GlobalHolderWrapper, {\n        ref: function ref(node) {\n          var _ref = node || {},\n            instance = _ref.instance,\n            sync = _ref.sync;\n          Promise.resolve().then(function () {\n            if (!newNotification.instance && instance) {\n              newNotification.instance = instance;\n              newNotification.sync = sync;\n              flushNotice();\n            }\n          });\n        }\n      }), holderFragment);\n    });\n    return;\n  }\n  // Notification not ready\n  if (!notification.instance) {\n    return;\n  }\n  // >>> Execute task\n  taskQueue.forEach(function (task) {\n    // eslint-disable-next-line default-case\n    switch (task.type) {\n      case 'open':\n        {\n          act(function () {\n            notification.instance.open(Object.assign(Object.assign({}, defaultGlobalConfig), task.config));\n          });\n          break;\n        }\n      case 'destroy':\n        act(function () {\n          notification === null || notification === void 0 ? void 0 : notification.instance.destroy(task.key);\n        });\n        break;\n    }\n  });\n  // Clean up\n  taskQueue = [];\n}\n// ==============================================================================\n// ==                                  Export                                  ==\n// ==============================================================================\nfunction setNotificationGlobalConfig(config) {\n  defaultGlobalConfig = Object.assign(Object.assign({}, defaultGlobalConfig), config);\n  // Trigger sync for it\n  act(function () {\n    var _a;\n    (_a = notification === null || notification === void 0 ? void 0 : notification.sync) === null || _a === void 0 ? void 0 : _a.call(notification);\n  });\n}\nfunction open(config) {\n  var global = globalConfig();\n  if (process.env.NODE_ENV !== 'production' && !global.holderRender) {\n    warnContext('notification');\n  }\n  taskQueue.push({\n    type: 'open',\n    config: config\n  });\n  flushNotice();\n}\nfunction destroy(key) {\n  taskQueue.push({\n    type: 'destroy',\n    key: key\n  });\n  flushNotice();\n}\nvar methods = ['success', 'info', 'warning', 'error'];\nvar baseStaticMethods = {\n  open: open,\n  destroy: destroy,\n  config: setNotificationGlobalConfig,\n  useNotification: useNotification,\n  _InternalPanelDoNotUseOrYouWillBeFired: PurePanel\n};\nvar staticMethods = baseStaticMethods;\nmethods.forEach(function (type) {\n  staticMethods[type] = function (config) {\n    return open(Object.assign(Object.assign({}, config), {\n      type: type\n    }));\n  };\n});\n// ==============================================================================\n// ==                                   Test                                   ==\n// ==============================================================================\nvar noop = function noop() {};\n/** @internal Only Work in test env */\n// eslint-disable-next-line import/no-mutable-exports\nexport var actWrapper = noop;\nif (process.env.NODE_ENV === 'test') {\n  actWrapper = function actWrapper(wrapper) {\n    act = wrapper;\n  };\n}\n/** @internal Only Work in test env */\n// eslint-disable-next-line import/no-mutable-exports\nexport var actDestroy = noop;\nif (process.env.NODE_ENV === 'test') {\n  actDestroy = function actDestroy() {\n    notification = null;\n  };\n}\nexport default staticMethods;","map":{"version":3,"names":["_slicedToArray","React","useContext","render","AppConfigContext","ConfigProvider","ConfigContext","globalConfig","warnContext","PurePanel","useNotification","useInternalNotification","notification","act","callback","taskQueue","defaultGlobalConfig","getGlobalContext","_defaultGlobalConfig","getContainer","rtl","maxCount","top","bottom","mergedContainer","document","body","GlobalHolder","forwardRef","props","ref","notificationConfig","sync","_useContext","getPrefixCls","prefixCls","appConfig","_useInternalNotificat","Object","assign","_useInternalNotificat2","api","holder","useEffect","useImperativeHandle","instance","keys","forEach","method","apply","arguments","GlobalHolderWrapper","_","_React$useState","useState","_React$useState2","setNotificationConfig","global","rootPrefixCls","getRootPrefixCls","rootIconPrefixCls","getIconPrefixCls","theme","getTheme","dom","createElement","iconPrefixCls","holderRender","flushNotice","holderFragment","createDocumentFragment","newNotification","fragment","node","_ref","Promise","resolve","then","task","type","open","config","destroy","key","setNotificationGlobalConfig","_a","call","process","env","NODE_ENV","push","methods","baseStaticMethods","_InternalPanelDoNotUseOrYouWillBeFired","staticMethods","noop","actWrapper","wrapper","actDestroy"],"sources":["C:/Users/kisho/OneDrive/Pictures/home/node_modules/antd/es/notification/index.js"],"sourcesContent":["\"use client\";\n\nimport React, { useContext } from 'react';\nimport { render } from \"rc-util/es/React/render\";\nimport { AppConfigContext } from '../app/context';\nimport ConfigProvider, { ConfigContext, globalConfig, warnContext } from '../config-provider';\nimport PurePanel from './PurePanel';\nimport useNotification, { useInternalNotification } from './useNotification';\nlet notification = null;\nlet act = callback => callback();\nlet taskQueue = [];\nlet defaultGlobalConfig = {};\nfunction getGlobalContext() {\n  const {\n    getContainer,\n    rtl,\n    maxCount,\n    top,\n    bottom\n  } = defaultGlobalConfig;\n  const mergedContainer = (getContainer === null || getContainer === void 0 ? void 0 : getContainer()) || document.body;\n  return {\n    getContainer: () => mergedContainer,\n    rtl,\n    maxCount,\n    top,\n    bottom\n  };\n}\nconst GlobalHolder = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    notificationConfig,\n    sync\n  } = props;\n  const {\n    getPrefixCls\n  } = useContext(ConfigContext);\n  const prefixCls = defaultGlobalConfig.prefixCls || getPrefixCls('notification');\n  const appConfig = useContext(AppConfigContext);\n  const [api, holder] = useInternalNotification(Object.assign(Object.assign(Object.assign({}, notificationConfig), {\n    prefixCls\n  }), appConfig.notification));\n  React.useEffect(sync, []);\n  React.useImperativeHandle(ref, () => {\n    const instance = Object.assign({}, api);\n    Object.keys(instance).forEach(method => {\n      instance[method] = function () {\n        sync();\n        return api[method].apply(api, arguments);\n      };\n    });\n    return {\n      instance,\n      sync\n    };\n  });\n  return holder;\n});\nconst GlobalHolderWrapper = /*#__PURE__*/React.forwardRef((_, ref) => {\n  const [notificationConfig, setNotificationConfig] = React.useState(getGlobalContext);\n  const sync = () => {\n    setNotificationConfig(getGlobalContext);\n  };\n  React.useEffect(sync, []);\n  const global = globalConfig();\n  const rootPrefixCls = global.getRootPrefixCls();\n  const rootIconPrefixCls = global.getIconPrefixCls();\n  const theme = global.getTheme();\n  const dom = /*#__PURE__*/React.createElement(GlobalHolder, {\n    ref: ref,\n    sync: sync,\n    notificationConfig: notificationConfig\n  });\n  return /*#__PURE__*/React.createElement(ConfigProvider, {\n    prefixCls: rootPrefixCls,\n    iconPrefixCls: rootIconPrefixCls,\n    theme: theme\n  }, global.holderRender ? global.holderRender(dom) : dom);\n});\nfunction flushNotice() {\n  if (!notification) {\n    const holderFragment = document.createDocumentFragment();\n    const newNotification = {\n      fragment: holderFragment\n    };\n    notification = newNotification;\n    // Delay render to avoid sync issue\n    act(() => {\n      render( /*#__PURE__*/React.createElement(GlobalHolderWrapper, {\n        ref: node => {\n          const {\n            instance,\n            sync\n          } = node || {};\n          Promise.resolve().then(() => {\n            if (!newNotification.instance && instance) {\n              newNotification.instance = instance;\n              newNotification.sync = sync;\n              flushNotice();\n            }\n          });\n        }\n      }), holderFragment);\n    });\n    return;\n  }\n  // Notification not ready\n  if (!notification.instance) {\n    return;\n  }\n  // >>> Execute task\n  taskQueue.forEach(task => {\n    // eslint-disable-next-line default-case\n    switch (task.type) {\n      case 'open':\n        {\n          act(() => {\n            notification.instance.open(Object.assign(Object.assign({}, defaultGlobalConfig), task.config));\n          });\n          break;\n        }\n      case 'destroy':\n        act(() => {\n          notification === null || notification === void 0 ? void 0 : notification.instance.destroy(task.key);\n        });\n        break;\n    }\n  });\n  // Clean up\n  taskQueue = [];\n}\n// ==============================================================================\n// ==                                  Export                                  ==\n// ==============================================================================\nfunction setNotificationGlobalConfig(config) {\n  defaultGlobalConfig = Object.assign(Object.assign({}, defaultGlobalConfig), config);\n  // Trigger sync for it\n  act(() => {\n    var _a;\n    (_a = notification === null || notification === void 0 ? void 0 : notification.sync) === null || _a === void 0 ? void 0 : _a.call(notification);\n  });\n}\nfunction open(config) {\n  const global = globalConfig();\n  if (process.env.NODE_ENV !== 'production' && !global.holderRender) {\n    warnContext('notification');\n  }\n  taskQueue.push({\n    type: 'open',\n    config\n  });\n  flushNotice();\n}\nfunction destroy(key) {\n  taskQueue.push({\n    type: 'destroy',\n    key\n  });\n  flushNotice();\n}\nconst methods = ['success', 'info', 'warning', 'error'];\nconst baseStaticMethods = {\n  open,\n  destroy,\n  config: setNotificationGlobalConfig,\n  useNotification,\n  _InternalPanelDoNotUseOrYouWillBeFired: PurePanel\n};\nconst staticMethods = baseStaticMethods;\nmethods.forEach(type => {\n  staticMethods[type] = config => open(Object.assign(Object.assign({}, config), {\n    type\n  }));\n});\n// ==============================================================================\n// ==                                   Test                                   ==\n// ==============================================================================\nconst noop = () => {};\n/** @internal Only Work in test env */\n// eslint-disable-next-line import/no-mutable-exports\nexport let actWrapper = noop;\nif (process.env.NODE_ENV === 'test') {\n  actWrapper = wrapper => {\n    act = wrapper;\n  };\n}\n/** @internal Only Work in test env */\n// eslint-disable-next-line import/no-mutable-exports\nexport let actDestroy = noop;\nif (process.env.NODE_ENV === 'test') {\n  actDestroy = () => {\n    notification = null;\n  };\n}\nexport default staticMethods;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}